{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleGameSelection = gameMode => {\n    navigate(`/game/${gameMode}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose a Game Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGameSelection('game1'),\n        children: \"Mode 1: Ordering Code Lines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Description: In this mode, you'll have to order code lines to complete the function.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGameSelection('game2'),\n        children: \"Mode 2: Completing Missing Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Description: In this mode, you need to fill in the missing parts of a code snippet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGameSelection('game3'),\n        children: \"Mode 3: Answer Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Description: In this mode, you need to select the correct answer based on a given problem.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","HomePage","_s","navigate","handleGameSelection","gameMode","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/HomePage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleGameSelection = (gameMode) => {\r\n    navigate(`/game/${gameMode}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Choose a Game Mode</h1>\r\n      <div>\r\n        <button onClick={() => handleGameSelection('game1')}>\r\n          Mode 1: Ordering Code Lines\r\n        </button>\r\n        <p>Description: In this mode, you'll have to order code lines to complete the function.</p>\r\n      </div>\r\n      <div>\r\n        <button onClick={() => handleGameSelection('game2')}>\r\n          Mode 2: Completing Missing Code\r\n        </button>\r\n        <p>Description: In this mode, you need to fill in the missing parts of a code snippet.</p>\r\n      </div>\r\n      <div>\r\n        <button onClick={() => handleGameSelection('game3')}>\r\n          Mode 3: Answer Selection\r\n        </button>\r\n        <p>Description: In this mode, you need to select the correct answer based on a given problem.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,mBAAmB,GAAIC,QAAQ,IAAK;IACxCF,QAAQ,CAAC,SAASE,QAAQ,EAAE,CAAC;EAC/B,CAAC;EAED,oBACEL,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BV,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAQW,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,OAAO,CAAE;QAAAE,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTV,OAAA;QAAAM,QAAA,EAAG;MAAoF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eACNV,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAQW,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,OAAO,CAAE;QAAAE,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTV,OAAA;QAAAM,QAAA,EAAG;MAAmF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACNV,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAQW,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,OAAO,CAAE;QAAAE,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTV,OAAA;QAAAM,QAAA,EAAG;MAA0F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CA9BID,QAAQ;EAAA,QACKH,WAAW;AAAA;AAAAc,EAAA,GADxBX,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}