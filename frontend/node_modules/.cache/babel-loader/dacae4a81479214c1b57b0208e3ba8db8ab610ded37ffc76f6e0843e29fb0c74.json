{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\ExerciseList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Game1 from \"./Game1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseList() {\n  _s();\n  const [exercises, setExercises] = useState([]); // Lista de ejercicios\n  const [selectedExercise, setSelectedExercise] = useState(null); // Ejercicio seleccionado\n\n  // Obtener la lista de ejercicios desde el backend\n  useEffect(() => {\n    const fetchExercises = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/exercises\");\n        setExercises(response.data);\n      } catch (error) {\n        console.error(\"Error fetching exercises:\", error);\n      }\n    };\n    fetchExercises();\n  }, []);\n\n  // Manejar selección de un ejercicio\n  const handleSelectExercise = exercise => {\n    setSelectedExercise(exercise);\n  };\n\n  // Si hay un ejercicio seleccionado, mostrar el juego\n  if (selectedExercise) {\n    return /*#__PURE__*/_jsxDEV(Game1, {\n      exercise: selectedExercise,\n      onBack: () => setSelectedExercise(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSelectExercise(exercise),\n      style: {\n        margin: \"10px\",\n        padding: \"10px\",\n        backgroundColor: \"#007BFF\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\"\n      },\n      children: exercise.codewarsId\n    }, exercise._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseList, \"0BnewTUD8xlW0gs3TzMLaF9fRHo=\");\n_c = ExerciseList;\nexport default ExerciseList;\nvar _c;\n$RefreshReg$(_c, \"ExerciseList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Game1","jsxDEV","_jsxDEV","ExerciseList","_s","exercises","setExercises","selectedExercise","setSelectedExercise","fetchExercises","response","get","data","error","console","handleSelectExercise","exercise","onBack","fileName","_jsxFileName","lineNumber","columnNumber","children","map","onClick","style","margin","padding","backgroundColor","color","border","borderRadius","cursor","codewarsId","_id","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/ExerciseList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Game1 from \"./Game1\";\r\n\r\nfunction ExerciseList() {\r\n  const [exercises, setExercises] = useState([]); // Lista de ejercicios\r\n  const [selectedExercise, setSelectedExercise] = useState(null); // Ejercicio seleccionado\r\n\r\n  // Obtener la lista de ejercicios desde el backend\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/exercises\");\r\n        setExercises(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching exercises:\", error);\r\n      }\r\n    };\r\n\r\n    fetchExercises();\r\n  }, []);\r\n\r\n  // Manejar selección de un ejercicio\r\n  const handleSelectExercise = (exercise) => {\r\n    setSelectedExercise(exercise);\r\n  };\r\n\r\n  // Si hay un ejercicio seleccionado, mostrar el juego\r\n  if (selectedExercise) {\r\n    return <Game1 exercise={selectedExercise} onBack={() => setSelectedExercise(null)} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Available Exercises</h1>\r\n      {exercises.map((exercise) => (\r\n        <button\r\n          key={exercise._id}\r\n          onClick={() => handleSelectExercise(exercise)}\r\n          style={{\r\n            margin: \"10px\",\r\n            padding: \"10px\",\r\n            backgroundColor: \"#007BFF\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          {exercise.codewarsId}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExerciseList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhE;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,qCAAqC,CAAC;QACvEL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,oBAAoB,GAAIC,QAAQ,IAAK;IACzCR,mBAAmB,CAACQ,QAAQ,CAAC;EAC/B,CAAC;;EAED;EACA,IAAIT,gBAAgB,EAAE;IACpB,oBAAOL,OAAA,CAACF,KAAK;MAACgB,QAAQ,EAAET,gBAAiB;MAACU,MAAM,EAAEA,CAAA,KAAMT,mBAAmB,CAAC,IAAI;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvF;EAEA,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAmB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BhB,SAAS,CAACkB,GAAG,CAAEP,QAAQ,iBACtBd,OAAA;MAEEsB,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACC,QAAQ,CAAE;MAC9CS,KAAK,EAAE;QACLC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAV,QAAA,EAEDN,QAAQ,CAACiB;IAAU,GAZfjB,QAAQ,CAACkB,GAAG;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaX,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CAlDQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAoDrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}