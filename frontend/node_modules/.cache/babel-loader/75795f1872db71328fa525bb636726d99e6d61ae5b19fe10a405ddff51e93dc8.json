{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserInfo from './UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game1Exercise = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetails, setExerciseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lines, setLines] = useState([]);\n  const [orderedLines, setOrderedLines] = useState([]);\n  const userId = \"67869f7defd086ba28f87d41\"; // ID del usuario (puedes obtenerlo dinámicamente)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetails(exerciseDetailsRes.data);\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId, userId]);\n  useEffect(() => {\n    if (exercise && exercise.answer && exercise.answer.python) {\n      const codeLines = exercise.answer.python.split('\\n');\n      const shuffledLines = [...codeLines].sort(() => Math.random() - 0.5); // Aleatoriza las líneas\n      setLines(shuffledLines);\n      setOrderedLines(codeLines); // Guardamos las líneas en el orden correcto\n    }\n  }, [exercise]);\n  const handleGameCompletion = async () => {\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\n    try {\n      await axios.put(`http://localhost:5000/api/users/progress/${userId}`, {\n        experiencePoints: experiencePointsEarned\n      });\n    } catch (err) {\n      console.error('Error al actualizar el progreso del usuario');\n    }\n  };\n  const handleLineMove = (fromIndex, toIndex) => {\n    const updatedLines = [...lines];\n    const [movedLine] = updatedLines.splice(fromIndex, 1);\n    updatedLines.splice(toIndex, 0, movedLine);\n    setLines(updatedLines);\n  };\n\n  // Verifica si las líneas ordenadas son iguales a las originales\n  const checkAnswer = () => {\n    const userCode = lines.join('\\n');\n    const correctCode = orderedLines.join('\\n');\n    return userCode === correctCode;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n  if (!exerciseDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No details available for this exercise.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exerciseDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-lines\",\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-line\",\n          draggable: true,\n          onDragStart: e => e.dataTransfer.setData('index', index),\n          onDrop: e => {\n            const fromIndex = parseInt(e.dataTransfer.getData('index'));\n            handleLineMove(fromIndex, index);\n          },\n          onDragOver: e => e.preventDefault(),\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (checkAnswer()) {\n            handleGameCompletion();\n          } else {\n            alert('Please try again! The code is not correct.');\n          }\n        },\n        children: \"Completar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(UserInfo, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Game1Exercise, \"c6fgaCFcfGuVYSzBe0MLlM/uVm4=\", false, function () {\n  return [useParams];\n});\n_c = Game1Exercise;\nexport default Game1Exercise;\nvar _c;\n$RefreshReg$(_c, \"Game1Exercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","UserInfo","jsxDEV","_jsxDEV","Game1Exercise","_s","exerciseId","exercise","setExercise","exerciseDetails","setExerciseDetails","user","setUser","loading","setLoading","error","setError","lines","setLines","orderedLines","setOrderedLines","userId","fetchData","exerciseRes","get","data","exerciseDetailsRes","userRes","err","answer","python","codeLines","split","shuffledLines","sort","Math","random","handleGameCompletion","experiencePointsEarned","put","experiencePoints","console","handleLineMove","fromIndex","toIndex","updatedLines","movedLine","splice","checkAnswer","userCode","join","correctCode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","map","line","index","draggable","onDragStart","e","dataTransfer","setData","onDrop","parseInt","getData","onDragOver","preventDefault","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserInfo from './UserInfo';\r\n\r\nconst Game1Exercise = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetails, setExerciseDetails] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lines, setLines] = useState([]);\r\n  const [orderedLines, setOrderedLines] = useState([]);\r\n  const userId = \"67869f7defd086ba28f87d41\"; // ID del usuario (puedes obtenerlo dinámicamente)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n\r\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetails(exerciseDetailsRes.data);\r\n\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId, userId]);\r\n\r\n  useEffect(() => {\r\n    if (exercise && exercise.answer && exercise.answer.python) {\r\n      const codeLines = exercise.answer.python.split('\\n');\r\n      const shuffledLines = [...codeLines].sort(() => Math.random() - 0.5); // Aleatoriza las líneas\r\n      setLines(shuffledLines);\r\n      setOrderedLines(codeLines); // Guardamos las líneas en el orden correcto\r\n    }\r\n  }, [exercise]);\r\n\r\n  const handleGameCompletion = async () => {\r\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/users/progress/${userId}`, {\r\n        experiencePoints: experiencePointsEarned\r\n        \r\n      });      \r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso del usuario');\r\n    }\r\n  };\r\n\r\n  const handleLineMove = (fromIndex, toIndex) => {\r\n    const updatedLines = [...lines];\r\n    const [movedLine] = updatedLines.splice(fromIndex, 1);\r\n    updatedLines.splice(toIndex, 0, movedLine);\r\n    setLines(updatedLines);\r\n  };\r\n\r\n  // Verifica si las líneas ordenadas son iguales a las originales\r\n  const checkAnswer = () => {\r\n    const userCode = lines.join('\\n');\r\n    const correctCode = orderedLines.join('\\n');\r\n    return userCode === correctCode;\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  if (!exerciseDetails) {\r\n    return <p>No details available for this exercise.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      {/* Contenedor del título y la descripción del ejercicio */}\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetails.name}</h1>\r\n        <p>{exerciseDetails.description}</p>\r\n      </div>\r\n\r\n      {/* Contenedor de las líneas de código */}\r\n      <div className=\"exercise-code\">\r\n        <h2>Python Code</h2>\r\n        <div className=\"code-lines\">\r\n          {lines.map((line, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"code-line\"\r\n              draggable\r\n              onDragStart={(e) => e.dataTransfer.setData('index', index)}\r\n              onDrop={(e) => {\r\n                const fromIndex = parseInt(e.dataTransfer.getData('index'));\r\n                handleLineMove(fromIndex, index);\r\n              }}\r\n              onDragOver={(e) => e.preventDefault()}\r\n            >\r\n              {line}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botón para completar el ejercicio */}\r\n      <div className=\"completion-button\">\r\n        <button \r\n          onClick={() => {\r\n            if (checkAnswer()) {\r\n              handleGameCompletion();\r\n            } else {\r\n              alert('Please try again! The code is not correct.');\r\n            }\r\n          }}\r\n        >\r\n          Completar\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mostrar la información del usuario */}\r\n      {user && <UserInfo user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}