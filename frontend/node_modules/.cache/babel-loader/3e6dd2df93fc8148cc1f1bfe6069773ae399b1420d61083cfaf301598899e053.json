{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserInfo from './UserInfo';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game1Exercise = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetails, setExerciseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lines, setLines] = useState([]);\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Hacer las peticiones de manera consecutiva\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetails(exerciseDetailsRes.data);\n\n        // Suponiendo que el código en Python esté en 'exercise.answer.python' y separaremos las líneas\n        const codeLines = exerciseRes.data.answer.python.split('\\n');\n        setLines(codeLines);\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId, userId]); // Se asegura de que se actualicen los datos correctamente cuando `exerciseId` o `userId` cambien\n\n  const handleGameCompletion = async () => {\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\n    try {\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\n        experiencePoints: experiencePointsEarned\n      });\n    } catch (err) {\n      console.error('Error al actualizar el progreso del usuario');\n    }\n  };\n  const moveLine = (fromIndex, toIndex) => {\n    const updatedLines = [...lines];\n    const [movedLine] = updatedLines.splice(fromIndex, 1);\n    updatedLines.splice(toIndex, 0, movedLine);\n    setLines(updatedLines);\n  };\n  const checkOrder = () => {\n    const correctOrder = exercise.answer.python.split('\\n');\n    if (JSON.stringify(lines) === JSON.stringify(correctOrder)) {\n      alert('¡Orden correcto!');\n    } else {\n      alert('El orden no es correcto');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n\n  // Verificar si exerciseDetails está disponible antes de intentar acceder a sus propiedades\n  if (!exerciseDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No details available for this exercise.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Componente para representar cada línea de código\n  const DraggableLine = ({\n    line,\n    index\n  }) => {\n    _s();\n    const [, drag] = useDrag(() => ({\n      type: 'line',\n      item: {\n        index\n      }\n    }));\n    const [, drop] = useDrop(() => ({\n      accept: 'line',\n      hover: item => {\n        if (item.index !== index) {\n          moveLine(item.index, index);\n          item.index = index;\n        }\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: node => drag(drop(node)),\n      className: \"draggable-line\",\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  _s(DraggableLine, \"M+2lH7TPz6U7DDXmQsQLvb5uMb0=\", false, function () {\n    return [useDrag, useDrop];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exerciseDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reorder the lines of code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-lines\",\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(DraggableLine, {\n          line: line,\n          index: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGameCompletion,\n        children: \"Complete Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkOrder,\n        children: \"Check Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(UserInfo, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game1Exercise, \"1U1BwsCSui79UZywr+3Txy8N9Zg=\", false, function () {\n  return [useParams];\n});\n_c = Game1Exercise;\nexport default Game1Exercise;\nvar _c;\n$RefreshReg$(_c, \"Game1Exercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","UserInfo","useDrag","useDrop","jsxDEV","_jsxDEV","Game1Exercise","_s2","_s","$RefreshSig$","exerciseId","exercise","setExercise","exerciseDetails","setExerciseDetails","user","setUser","loading","setLoading","error","setError","lines","setLines","userId","fetchData","exerciseRes","get","data","exerciseDetailsRes","codeLines","answer","python","split","userRes","err","handleGameCompletion","experiencePointsEarned","put","experiencePoints","console","moveLine","fromIndex","toIndex","updatedLines","movedLine","splice","checkOrder","correctOrder","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","DraggableLine","line","index","drag","type","item","drop","accept","hover","ref","node","className","name","description","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserInfo from './UserInfo';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nconst Game1Exercise = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetails, setExerciseDetails] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lines, setLines] = useState([]);\r\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Hacer las peticiones de manera consecutiva\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n\r\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetails(exerciseDetailsRes.data);\r\n\r\n        // Suponiendo que el código en Python esté en 'exercise.answer.python' y separaremos las líneas\r\n        const codeLines = exerciseRes.data.answer.python.split('\\n');\r\n        setLines(codeLines);\r\n\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId, userId]); // Se asegura de que se actualicen los datos correctamente cuando `exerciseId` o `userId` cambien\r\n\r\n  const handleGameCompletion = async () => {\r\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\r\n        experiencePoints: experiencePointsEarned\r\n      });\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso del usuario');\r\n    }\r\n  };\r\n\r\n  const moveLine = (fromIndex, toIndex) => {\r\n    const updatedLines = [...lines];\r\n    const [movedLine] = updatedLines.splice(fromIndex, 1);\r\n    updatedLines.splice(toIndex, 0, movedLine);\r\n    setLines(updatedLines);\r\n  };\r\n\r\n  const checkOrder = () => {\r\n    const correctOrder = exercise.answer.python.split('\\n');\r\n    if (JSON.stringify(lines) === JSON.stringify(correctOrder)) {\r\n      alert('¡Orden correcto!');\r\n    } else {\r\n      alert('El orden no es correcto');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  // Verificar si exerciseDetails está disponible antes de intentar acceder a sus propiedades\r\n  if (!exerciseDetails) {\r\n    return <p>No details available for this exercise.</p>;\r\n  }\r\n\r\n  // Componente para representar cada línea de código\r\n  const DraggableLine = ({ line, index }) => {\r\n    const [, drag] = useDrag(() => ({\r\n      type: 'line',\r\n      item: { index },\r\n    }));\r\n\r\n    const [, drop] = useDrop(() => ({\r\n      accept: 'line',\r\n      hover: (item) => {\r\n        if (item.index !== index) {\r\n          moveLine(item.index, index);\r\n          item.index = index;\r\n        }\r\n      },\r\n    }));\r\n\r\n    return (\r\n      <div ref={(node) => drag(drop(node))} className=\"draggable-line\">\r\n        {line}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      {/* Contenedor del título y la descripción del ejercicio */}\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetails.name}</h1>\r\n        <p>{exerciseDetails.description}</p>\r\n      </div>\r\n\r\n      {/* Contenedor del código en Python */}\r\n      <div className=\"exercise-code\">\r\n        <h2>Reorder the lines of code</h2>\r\n        <div className=\"code-lines\">\r\n          {lines.map((line, index) => (\r\n            <DraggableLine key={index} line={line} index={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botón para completar el ejercicio */}\r\n      <div className=\"completion-button\">\r\n        <button onClick={handleGameCompletion}>Complete Game</button>\r\n        <button onClick={checkOrder}>Check Order</button>\r\n      </div>\r\n\r\n      {/* Mostrar la información del usuario */}\r\n      {user && <UserInfo user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}