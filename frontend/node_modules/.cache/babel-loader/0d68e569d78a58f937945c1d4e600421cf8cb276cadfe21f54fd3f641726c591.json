{"ast":null,"code":"var _jsxFileName = \"D:\\\\prototipo\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Ejercicio from \"./components/Ejercicio\";\nimport EditorCodigo from \"./components/EditorCodigo\";\nimport Resultado from \"./components/Resultado\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [ejercicios, setEjercicios] = useState([]); // Lista de ejercicios completados\n  const [ejercicioSeleccionado, setEjercicioSeleccionado] = useState(null); // Detalles del ejercicio seleccionado\n  const [resultado, setResultado] = useState(\"\"); // Resultado del código enviado\n\n  // Obtener lista de ejercicios completados desde el backend\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/codewars/AvilesDanie/completed\").then(res => {\n      setEjercicios(res.data); // Guarda la lista de ejercicios completados\n    }).catch(err => console.error(err));\n  }, []);\n\n  // Obtener los detalles de un ejercicio específico\n  const obtenerEjercicio = id => {\n    console.log(`Obteniendo ejercicio con ID: ${id}`); // Log para verificar el ID\n    axios.get(`http://localhost:4000/api/codewars/${id}`).then(res => {\n      setEjercicioSeleccionado({\n        titulo: res.data.name,\n        // Nombre del ejercicio\n        descripcion: res.data.description,\n        // Descripción del ejercicio\n        lenguaje: res.data.languages[0] // Primer lenguaje disponible\n      });\n      setResultado(\"\"); // Reinicia el resultado\n    }).catch(err => {\n      console.error(\"Error al obtener el ejercicio:\", err.message);\n    });\n  };\n\n  // Manejar envío de código al backend\n  const enviarCodigo = codigo => {\n    axios.post(\"http://localhost:4000/api/evaluar\", {\n      codigo,\n      lenguaje: ejercicioSeleccionado.lenguaje // Lenguaje seleccionado\n    }).then(res => setResultado(res.data.mensaje)).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Aprende Programaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), !ejercicioSeleccionado ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un ejercicio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), ejercicios.map(ejercicio => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => obtenerEjercicio(ejercicio.id) // Obtiene los detalles del ejercicio por ID\n        ,\n        children: [ejercicio.name, \" \"]\n      }, ejercicio.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ejercicioSeleccionado.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ejercicioSeleccionado.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditorCodigo, {\n        onEnviar: enviarCodigo,\n        lenguaje: ejercicioSeleccionado.lenguaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Resultado, {\n        resultado: resultado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEjercicioSeleccionado(null),\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7tifx3VAqP2YUAef7ZCrBiGgdkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Ejercicio","EditorCodigo","Resultado","axios","jsxDEV","_jsxDEV","App","_s","ejercicios","setEjercicios","ejercicioSeleccionado","setEjercicioSeleccionado","resultado","setResultado","get","then","res","data","catch","err","console","error","obtenerEjercicio","id","log","titulo","name","descripcion","description","lenguaje","languages","message","enviarCodigo","codigo","post","mensaje","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ejercicio","onClick","onEnviar","_c","$RefreshReg$"],"sources":["D:/prototipo/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Ejercicio from \"./components/Ejercicio\";\r\nimport EditorCodigo from \"./components/EditorCodigo\";\r\nimport Resultado from \"./components/Resultado\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [ejercicios, setEjercicios] = useState([]); // Lista de ejercicios completados\r\n  const [ejercicioSeleccionado, setEjercicioSeleccionado] = useState(null); // Detalles del ejercicio seleccionado\r\n  const [resultado, setResultado] = useState(\"\"); // Resultado del código enviado\r\n\r\n  // Obtener lista de ejercicios completados desde el backend\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:4000/api/codewars/AvilesDanie/completed\")\r\n      .then((res) => {\r\n        setEjercicios(res.data); // Guarda la lista de ejercicios completados\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  // Obtener los detalles de un ejercicio específico\r\n  const obtenerEjercicio = (id) => {\r\n    console.log(`Obteniendo ejercicio con ID: ${id}`); // Log para verificar el ID\r\n    axios.get(`http://localhost:4000/api/codewars/${id}`)\r\n      .then((res) => {\r\n        setEjercicioSeleccionado({\r\n          titulo: res.data.name, // Nombre del ejercicio\r\n          descripcion: res.data.description, // Descripción del ejercicio\r\n          lenguaje: res.data.languages[0], // Primer lenguaje disponible\r\n        });\r\n        setResultado(\"\"); // Reinicia el resultado\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error al obtener el ejercicio:\", err.message);\r\n      });\r\n  };\r\n  \r\n  // Manejar envío de código al backend\r\n  const enviarCodigo = (codigo) => {\r\n    axios.post(\"http://localhost:4000/api/evaluar\", {\r\n      codigo,\r\n      lenguaje: ejercicioSeleccionado.lenguaje, // Lenguaje seleccionado\r\n    })\r\n      .then((res) => setResultado(res.data.mensaje))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Aprende Programación</h1>\r\n      {!ejercicioSeleccionado ? (\r\n        <div>\r\n          <h2>Selecciona un ejercicio:</h2>\r\n          {ejercicios.map((ejercicio) => (\r\n            <button\r\n              key={ejercicio.id}\r\n              onClick={() => obtenerEjercicio(ejercicio.id)} // Obtiene los detalles del ejercicio por ID\r\n            >\r\n              {ejercicio.name} {/* Muestra el nombre del ejercicio */}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>{ejercicioSeleccionado.titulo}</h2>\r\n          <p>{ejercicioSeleccionado.descripcion}</p>\r\n          <EditorCodigo\r\n            onEnviar={enviarCodigo}\r\n            lenguaje={ejercicioSeleccionado.lenguaje}\r\n          />\r\n          <Resultado resultado={resultado} />\r\n          <button onClick={() => setEjercicioSeleccionado(null)}>Volver</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}