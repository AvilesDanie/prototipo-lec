{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game1({\n  exercise,\n  onBack\n}) {\n  _s();\n  const correctOrder = exercise.answer.python.split(\"\\n\"); // Código correcto\n  const shuffled = [...correctOrder].sort(() => Math.random() - 0.5); // Código desordenado\n  const [lines, setLines] = useState(shuffled);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  // Lógica de arrastrar y soltar\n  const handleDragStart = (e, index) => {\n    e.dataTransfer.setData(\"text/plain\", index);\n  };\n  const handleDrop = (e, targetIndex) => {\n    const draggedIndex = parseInt(e.dataTransfer.getData(\"text/plain\"), 10);\n    const updatedLines = [...lines];\n\n    // Intercambiar líneas\n    const [draggedLine] = updatedLines.splice(draggedIndex, 1);\n    updatedLines.splice(targetIndex, 0, draggedLine);\n    setLines(updatedLines);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  // Verificar si la respuesta es correcta\n  const checkAnswer = () => {\n    if (JSON.stringify(lines) === JSON.stringify(correctOrder)) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Back to Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order the Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Language: Python\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, index),\n        onDrop: e => handleDrop(e, index),\n        onDragOver: handleDragOver,\n        style: {\n          padding: \"10px\",\n          margin: \"5px 0\",\n          backgroundColor: \"#f0f0f0\",\n          border: \"1px solid #ddd\",\n          cursor: \"move\"\n        },\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswer,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isCorrect === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"Correct!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }, this), isCorrect === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Incorrect. Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Game1, \"fJGVCsWy2uYmCbLPi0QcKQSQV5g=\");\n_c = Game1;\nexport default Game1;\nvar _c;\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game1","exercise","onBack","_s","correctOrder","answer","python","split","shuffled","sort","Math","random","lines","setLines","isCorrect","setIsCorrect","handleDragStart","e","index","dataTransfer","setData","handleDrop","targetIndex","draggedIndex","parseInt","getData","updatedLines","draggedLine","splice","handleDragOver","preventDefault","checkAnswer","JSON","stringify","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","line","draggable","onDragStart","onDrop","onDragOver","padding","margin","backgroundColor","border","cursor","marginTop","color","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Game1({ exercise, onBack }) {\r\n  const correctOrder = exercise.answer.python.split(\"\\n\"); // Código correcto\r\n  const shuffled = [...correctOrder].sort(() => Math.random() - 0.5); // Código desordenado\r\n  const [lines, setLines] = useState(shuffled);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n\r\n  // Lógica de arrastrar y soltar\r\n  const handleDragStart = (e, index) => {\r\n    e.dataTransfer.setData(\"text/plain\", index);\r\n  };\r\n\r\n  const handleDrop = (e, targetIndex) => {\r\n    const draggedIndex = parseInt(e.dataTransfer.getData(\"text/plain\"), 10);\r\n    const updatedLines = [...lines];\r\n\r\n    // Intercambiar líneas\r\n    const [draggedLine] = updatedLines.splice(draggedIndex, 1);\r\n    updatedLines.splice(targetIndex, 0, draggedLine);\r\n\r\n    setLines(updatedLines);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Verificar si la respuesta es correcta\r\n  const checkAnswer = () => {\r\n    if (JSON.stringify(lines) === JSON.stringify(correctOrder)) {\r\n      setIsCorrect(true);\r\n    } else {\r\n      setIsCorrect(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={onBack} style={{ marginBottom: \"20px\" }}>\r\n        Back to Exercises\r\n      </button>\r\n      <h1>Order the Code</h1>\r\n      <p>Language: Python</p>\r\n      <div>\r\n        {lines.map((line, index) => (\r\n          <div\r\n            key={index}\r\n            draggable\r\n            onDragStart={(e) => handleDragStart(e, index)}\r\n            onDrop={(e) => handleDrop(e, index)}\r\n            onDragOver={handleDragOver}\r\n            style={{\r\n              padding: \"10px\",\r\n              margin: \"5px 0\",\r\n              backgroundColor: \"#f0f0f0\",\r\n              border: \"1px solid #ddd\",\r\n              cursor: \"move\",\r\n            }}\r\n          >\r\n            {line}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={checkAnswer} style={{ marginTop: \"20px\" }}>\r\n        Check Answer\r\n      </button>\r\n      {isCorrect === true && <p style={{ color: \"green\" }}>Correct!</p>}\r\n      {isCorrect === false && <p style={{ color: \"red\" }}>Incorrect. Try again!</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}