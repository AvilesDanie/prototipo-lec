{"ast":null,"code":"var _jsxFileName = \"D:\\\\prototipo\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport EditorCodigo from \"./components/EditorCodigo\";\nimport Resultado from \"./components/Resultado\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport Button from \"@mui/material/Button\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [ejercicios, setEjercicios] = useState([]); // Lista de ejercicios\n  const [ejercicioSeleccionado, setEjercicioSeleccionado] = useState(null); // Ejercicio actual\n  const [resultado, setResultado] = useState(\"\"); // Resultado del código enviado\n\n  const lenguajesPermitidos = [\"python\", \"javascript\", \"java\", \"c\", \"c++\"];\n\n  // Obtener lista de ejercicios completados\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/api/codewars/AvilesDanie/completed\").then(res => {\n      setEjercicios(res.data); // Guarda los ejercicios en el estado\n    }).catch(err => console.error(err));\n  }, []);\n\n  // Manejar selección de un ejercicio\n  const seleccionarEjercicio = id => {\n    axios.get(`http://localhost:4000/api/codewars/${id}`).then(res => {\n      const lenguajesFiltrados = res.data.languages.filter(lang => lenguajesPermitidos.includes(lang.toLowerCase()));\n      setEjercicioSeleccionado({\n        titulo: res.data.name,\n        // Nombre del ejercicio\n        descripcion: res.data.description,\n        // Descripción del ejercicio\n        lenguajes: lenguajesFiltrados // Lenguajes filtrados\n      });\n      setResultado(\"\"); // Limpia el resultado anterior\n    }).catch(err => console.error(err));\n  };\n\n  // Manejar envío de código al backend\n  const enviarCodigo = (codigo, lenguajeSeleccionado) => {\n    console.log(\"Datos enviados:\", {\n      codigo,\n      lenguaje: lenguajeSeleccionado\n    });\n    axios.post(\"http://localhost:4000/api/evaluar\", {\n      codigo,\n      lenguaje: lenguajeSeleccionado // Enviar el lenguaje seleccionado\n    }).then(res => setResultado(res.data.mensaje)) // Actualiza el resultado\n    .catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Aprende Programaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !ejercicioSeleccionado ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de Ejercicios Completados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), ejercicios.map(ejercicio => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => seleccionarEjercicio(ejercicio.id),\n        style: {\n          margin: \"5px\"\n        },\n        children: ejercicio.name\n      }, ejercicio.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ejercicioSeleccionado.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), ejercicioSeleccionado.descripcion ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: ejercicioSeleccionado.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Descripci\\xF3n no disponible para este ejercicio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditorCodigo, {\n        onEnviar: enviarCodigo,\n        lenguaje: ejercicioSeleccionado.lenguajes[0],\n        lenguajes: ejercicioSeleccionado.lenguajes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Resultado, {\n        resultado: resultado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: () => setEjercicioSeleccionado(null),\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7tifx3VAqP2YUAef7ZCrBiGgdkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditorCodigo","Resultado","axios","ReactMarkdown","Button","jsxDEV","_jsxDEV","App","_s","ejercicios","setEjercicios","ejercicioSeleccionado","setEjercicioSeleccionado","resultado","setResultado","lenguajesPermitidos","get","then","res","data","catch","err","console","error","seleccionarEjercicio","id","lenguajesFiltrados","languages","filter","lang","includes","toLowerCase","titulo","name","descripcion","description","lenguajes","enviarCodigo","codigo","lenguajeSeleccionado","log","lenguaje","post","mensaje","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ejercicio","variant","color","onClick","style","margin","onEnviar","marginTop","_c","$RefreshReg$"],"sources":["D:/prototipo/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EditorCodigo from \"./components/EditorCodigo\";\r\nimport Resultado from \"./components/Resultado\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport Button from \"@mui/material/Button\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [ejercicios, setEjercicios] = useState([]); // Lista de ejercicios\r\n  const [ejercicioSeleccionado, setEjercicioSeleccionado] = useState(null); // Ejercicio actual\r\n  const [resultado, setResultado] = useState(\"\"); // Resultado del código enviado\r\n\r\n  const lenguajesPermitidos = [\"python\", \"javascript\", \"java\", \"c\", \"c++\"];\r\n\r\n  // Obtener lista de ejercicios completados\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:4000/api/codewars/AvilesDanie/completed\")\r\n      .then((res) => {\r\n        setEjercicios(res.data); // Guarda los ejercicios en el estado\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  // Manejar selección de un ejercicio\r\n  const seleccionarEjercicio = (id) => {\r\n    axios.get(`http://localhost:4000/api/codewars/${id}`)\r\n      .then((res) => {\r\n        const lenguajesFiltrados = res.data.languages.filter((lang) =>\r\n          lenguajesPermitidos.includes(lang.toLowerCase())\r\n        );\r\n\r\n        setEjercicioSeleccionado({\r\n          titulo: res.data.name, // Nombre del ejercicio\r\n          descripcion: res.data.description, // Descripción del ejercicio\r\n          lenguajes: lenguajesFiltrados, // Lenguajes filtrados\r\n        });\r\n        setResultado(\"\"); // Limpia el resultado anterior\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  // Manejar envío de código al backend\r\n  const enviarCodigo = (codigo, lenguajeSeleccionado) => {\r\n    console.log(\"Datos enviados:\", { codigo, lenguaje: lenguajeSeleccionado });\r\n\r\n    axios.post(\"http://localhost:4000/api/evaluar\", {\r\n      codigo,\r\n      lenguaje: lenguajeSeleccionado, // Enviar el lenguaje seleccionado\r\n    })\r\n      .then((res) => setResultado(res.data.mensaje)) // Actualiza el resultado\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Aprende Programación</h1>\r\n      {!ejercicioSeleccionado ? (\r\n        <div>\r\n          <h2>Lista de Ejercicios Completados</h2>\r\n          {ejercicios.map((ejercicio) => (\r\n            <Button\r\n              key={ejercicio.id}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => seleccionarEjercicio(ejercicio.id)}\r\n              style={{ margin: \"5px\" }}\r\n            >\r\n              {ejercicio.name}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2>{ejercicioSeleccionado.titulo}</h2>\r\n          {ejercicioSeleccionado.descripcion ? (\r\n            <ReactMarkdown>{ejercicioSeleccionado.descripcion}</ReactMarkdown>\r\n          ) : (\r\n            <p>Descripción no disponible para este ejercicio.</p>\r\n          )}\r\n          <EditorCodigo\r\n            onEnviar={enviarCodigo}\r\n            lenguaje={ejercicioSeleccionado.lenguajes[0]}\r\n            lenguajes={ejercicioSeleccionado.lenguajes}\r\n          />\r\n          <Resultado resultado={resultado} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={() => setEjercicioSeleccionado(null)}\r\n            style={{ marginTop: \"10px\" }}\r\n          >\r\n            Volver\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}