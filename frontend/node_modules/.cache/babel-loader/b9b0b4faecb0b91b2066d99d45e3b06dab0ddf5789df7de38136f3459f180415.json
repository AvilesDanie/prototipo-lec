{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Example data for the game\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercise = {\n  id: \"1\",\n  language: \"JavaScript\",\n  correctOrder: [\"function greet() {\", \"  console.log('Hello, World!');\", \"}\"],\n  shuffled: [\"  console.log('Hello, World!');\", \"function greet() {\", \"}\"]\n};\nfunction Game1() {\n  _s();\n  const [lines, setLines] = useState(exercise.shuffled);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  // Handle drag and drop logic\n  const handleDragStart = (e, index) => {\n    e.dataTransfer.setData(\"text/plain\", index);\n  };\n  const handleDrop = (e, targetIndex) => {\n    const draggedIndex = parseInt(e.dataTransfer.getData(\"text/plain\"), 10);\n    const updatedLines = [...lines];\n\n    // Swap the lines\n    const [draggedLine] = updatedLines.splice(draggedIndex, 1);\n    updatedLines.splice(targetIndex, 0, draggedLine);\n    setLines(updatedLines);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n\n  // Check if the current order is correct\n  const checkAnswer = () => {\n    if (JSON.stringify(lines) === JSON.stringify(exercise.correctOrder)) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order the Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Language: \", exercise.language]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, index),\n        onDrop: e => handleDrop(e, index),\n        onDragOver: handleDragOver,\n        style: {\n          padding: \"10px\",\n          margin: \"5px 0\",\n          backgroundColor: \"#f0f0f0\",\n          border: \"1px solid #ddd\",\n          cursor: \"move\"\n        },\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswer,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isCorrect === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"Correct!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 30\n    }, this), isCorrect === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Incorrect. Try again!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Game1, \"DT5BeAgRMk6ouMNOScl1TBGThu4=\");\n_c = Game1;\nexport default Game1;\nvar _c;\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","exercise","id","language","correctOrder","shuffled","Game1","_s","lines","setLines","isCorrect","setIsCorrect","handleDragStart","e","index","dataTransfer","setData","handleDrop","targetIndex","draggedIndex","parseInt","getData","updatedLines","draggedLine","splice","handleDragOver","preventDefault","checkAnswer","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","line","draggable","onDragStart","onDrop","onDragOver","style","padding","margin","backgroundColor","border","cursor","onClick","marginTop","color","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// Example data for the game\r\nconst exercise = {\r\n  id: \"1\",\r\n  language: \"JavaScript\",\r\n  correctOrder: [\r\n    \"function greet() {\",\r\n    \"  console.log('Hello, World!');\",\r\n    \"}\",\r\n  ],\r\n  shuffled: [\r\n    \"  console.log('Hello, World!');\",\r\n    \"function greet() {\",\r\n    \"}\",\r\n  ],\r\n};\r\n\r\nfunction Game1() {\r\n  const [lines, setLines] = useState(exercise.shuffled);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n\r\n  // Handle drag and drop logic\r\n  const handleDragStart = (e, index) => {\r\n    e.dataTransfer.setData(\"text/plain\", index);\r\n  };\r\n\r\n  const handleDrop = (e, targetIndex) => {\r\n    const draggedIndex = parseInt(e.dataTransfer.getData(\"text/plain\"), 10);\r\n    const updatedLines = [...lines];\r\n\r\n    // Swap the lines\r\n    const [draggedLine] = updatedLines.splice(draggedIndex, 1);\r\n    updatedLines.splice(targetIndex, 0, draggedLine);\r\n\r\n    setLines(updatedLines);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Check if the current order is correct\r\n  const checkAnswer = () => {\r\n    if (JSON.stringify(lines) === JSON.stringify(exercise.correctOrder)) {\r\n      setIsCorrect(true);\r\n    } else {\r\n      setIsCorrect(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Order the Code</h1>\r\n      <p>Language: {exercise.language}</p>\r\n      <div>\r\n        {lines.map((line, index) => (\r\n          <div\r\n            key={index}\r\n            draggable\r\n            onDragStart={(e) => handleDragStart(e, index)}\r\n            onDrop={(e) => handleDrop(e, index)}\r\n            onDragOver={handleDragOver}\r\n            style={{\r\n              padding: \"10px\",\r\n              margin: \"5px 0\",\r\n              backgroundColor: \"#f0f0f0\",\r\n              border: \"1px solid #ddd\",\r\n              cursor: \"move\",\r\n            }}\r\n          >\r\n            {line}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={checkAnswer} style={{ marginTop: \"20px\" }}>\r\n        Check Answer\r\n      </button>\r\n      {isCorrect === true && <p style={{ color: \"green\" }}>Correct!</p>}\r\n      {isCorrect === false && <p style={{ color: \"red\" }}>Incorrect. Try again!</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}