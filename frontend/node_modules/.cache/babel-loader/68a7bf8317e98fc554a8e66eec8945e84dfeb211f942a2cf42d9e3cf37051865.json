{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserInfo from './UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game1Exercise = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetails, setExerciseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Hacer las peticiones de manera consecutiva\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetails(exerciseDetailsRes.data);\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId, userId]); // Se asegura de que se actualicen los datos correctamente cuando `exerciseId` o `userId` cambien\n\n  const handleGameCompletion = async () => {\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\n    try {\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\n        experiencePoints: experiencePointsEarned\n      });\n    } catch (err) {\n      console.error('Error al actualizar el progreso del usuario');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n\n  // Verificar si exerciseDetails está disponible antes de intentar acceder a sus propiedades\n  if (!exerciseDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No details available for this exercise.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exerciseDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: exercise.answer.python\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGameCompletion,\n        children: \"Complete Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(UserInfo, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Game1Exercise, \"wqyrZbtKWZIGJJrqzUBXGrHLW+Q=\", false, function () {\n  return [useParams];\n});\n_c = Game1Exercise;\nexport default Game1Exercise;\nvar _c;\n$RefreshReg$(_c, \"Game1Exercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","UserInfo","jsxDEV","_jsxDEV","Game1Exercise","_s","exerciseId","exercise","setExercise","exerciseDetails","setExerciseDetails","user","setUser","loading","setLoading","error","setError","userId","fetchData","exerciseRes","get","data","exerciseDetailsRes","userRes","err","handleGameCompletion","experiencePointsEarned","put","experiencePoints","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","answer","python","onClick","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserInfo from './UserInfo';\r\n\r\nconst Game1Exercise = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetails, setExerciseDetails] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Hacer las peticiones de manera consecutiva\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n\r\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetails(exerciseDetailsRes.data);\r\n\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId, userId]); // Se asegura de que se actualicen los datos correctamente cuando `exerciseId` o `userId` cambien\r\n\r\n  const handleGameCompletion = async () => {\r\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\r\n        experiencePoints: experiencePointsEarned\r\n      });\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso del usuario');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  // Verificar si exerciseDetails está disponible antes de intentar acceder a sus propiedades\r\n  if (!exerciseDetails) {\r\n    return <p>No details available for this exercise.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      {/* Contenedor del título y la descripción del ejercicio */}\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetails.name}</h1>\r\n        <p>{exerciseDetails.description}</p>\r\n      </div>\r\n\r\n      {/* Contenedor del código en Python */}\r\n      <div className=\"exercise-code\">\r\n        <h2>Python Code</h2>\r\n        <pre>{exercise.answer.python}</pre>\r\n      </div>\r\n\r\n      {/* Botón para completar el ejercicio */}\r\n      <div className=\"completion-button\">\r\n        <button onClick={handleGameCompletion}>Complete Game</button>\r\n      </div>\r\n\r\n      {/* Mostrar la información del usuario */}\r\n      {user && <UserInfo user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}