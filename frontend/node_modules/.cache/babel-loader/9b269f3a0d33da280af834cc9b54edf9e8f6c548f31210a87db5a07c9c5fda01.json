{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game1 = () => {\n  _s();\n  const [exercise, setExercise] = useState(null); // Estado para el ejercicio\n  const [user, setUser] = useState(null); // Estado para el usuario\n  const [experience, setExperience] = useState(0); // Puntos de experiencia del usuario\n  const [level, setLevel] = useState(1); // Nivel del usuario\n\n  // ID del ejercicio que quieres cargar, este puede ser pasado como props o definido aquí.\n  const exerciseId = \"538835ae443aae6e03000547\"; // Ejemplo de ID de ejercicio\n\n  useEffect(() => {\n    // Obtener detalles del ejercicio desde la base de datos\n    axios.get(`/api/exercises/${exerciseId}`).then(response => {\n      const exerciseData = response.data;\n      setExercise(exerciseData);\n    }).catch(error => console.error(\"Error al obtener el ejercicio:\", error));\n\n    // Obtener detalles del usuario, por ejemplo, el usuario con ID 1\n    axios.get(`/api/users/1`) // Ajusta la ruta según la lógica de tu aplicación\n    .then(response => {\n      const userData = response.data;\n      setUser(userData);\n      setExperience(userData.experiencePoints); // Establecer los puntos de experiencia\n      setLevel(userData.level); // Establecer el nivel del usuario\n    }).catch(error => console.error(\"Error al obtener el usuario:\", error));\n  }, []);\n  const handleSolveExercise = () => {\n    // Aquí aumentamos los puntos de experiencia del usuario\n    let newExperience = experience + 100; // Por ejemplo, sumamos 100 puntos al resolver el ejercicio\n    setExperience(newExperience);\n\n    // Verificar si el usuario ha alcanzado los 1000 puntos para subir de nivel\n    if (newExperience >= 1000) {\n      setLevel(level + 1);\n      newExperience = 0; // Resetear los puntos de experiencia después de subir de nivel\n    }\n\n    // Aquí enviaríamos la actualización de los puntos de experiencia y nivel al backend\n    axios.put(`/api/users/1`, {\n      experiencePoints: newExperience,\n      level: level\n    }).then(response => console.log(\"Usuario actualizado:\", response)).catch(error => console.error(\"Error al actualizar el usuario:\", error));\n  };\n  if (!exercise || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this); // Mostrar un mensaje mientras cargan los datos\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: exercise.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: exercise.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: exercise.answer.python\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSolveExercise,\n      children: \"Resolver ejercicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Puntos de experiencia: \", experience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nivel: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Game1, \"5fcUXtj7zgUy7gihx5faAgLR8nI=\");\n_c = Game1;\nexport default Game1;\nvar _c;\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Game1","_s","exercise","setExercise","user","setUser","experience","setExperience","level","setLevel","exerciseId","get","then","response","exerciseData","data","catch","error","console","userData","experiencePoints","handleSolveExercise","newExperience","put","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","answer","python","onClick","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Game1 = () => {\r\n  const [exercise, setExercise] = useState(null); // Estado para el ejercicio\r\n  const [user, setUser] = useState(null); // Estado para el usuario\r\n  const [experience, setExperience] = useState(0); // Puntos de experiencia del usuario\r\n  const [level, setLevel] = useState(1); // Nivel del usuario\r\n\r\n  // ID del ejercicio que quieres cargar, este puede ser pasado como props o definido aquí.\r\n  const exerciseId = \"538835ae443aae6e03000547\"; // Ejemplo de ID de ejercicio\r\n\r\n  useEffect(() => {\r\n    // Obtener detalles del ejercicio desde la base de datos\r\n    axios.get(`/api/exercises/${exerciseId}`)\r\n      .then(response => {\r\n        const exerciseData = response.data;\r\n        setExercise(exerciseData);\r\n      })\r\n      .catch(error => console.error(\"Error al obtener el ejercicio:\", error));\r\n\r\n    // Obtener detalles del usuario, por ejemplo, el usuario con ID 1\r\n    axios.get(`/api/users/1`) // Ajusta la ruta según la lógica de tu aplicación\r\n      .then(response => {\r\n        const userData = response.data;\r\n        setUser(userData);\r\n        setExperience(userData.experiencePoints); // Establecer los puntos de experiencia\r\n        setLevel(userData.level); // Establecer el nivel del usuario\r\n      })\r\n      .catch(error => console.error(\"Error al obtener el usuario:\", error));\r\n  }, []);\r\n\r\n  const handleSolveExercise = () => {\r\n    // Aquí aumentamos los puntos de experiencia del usuario\r\n    let newExperience = experience + 100; // Por ejemplo, sumamos 100 puntos al resolver el ejercicio\r\n    setExperience(newExperience);\r\n\r\n    // Verificar si el usuario ha alcanzado los 1000 puntos para subir de nivel\r\n    if (newExperience >= 1000) {\r\n      setLevel(level + 1);\r\n      newExperience = 0; // Resetear los puntos de experiencia después de subir de nivel\r\n    }\r\n\r\n    // Aquí enviaríamos la actualización de los puntos de experiencia y nivel al backend\r\n    axios.put(`/api/users/1`, {\r\n      experiencePoints: newExperience,\r\n      level: level,\r\n    })\r\n      .then(response => console.log(\"Usuario actualizado:\", response))\r\n      .catch(error => console.error(\"Error al actualizar el usuario:\", error));\r\n  };\r\n\r\n  if (!exercise || !user) {\r\n    return <div>Loading...</div>; // Mostrar un mensaje mientras cargan los datos\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h1>{exercise.name}</h1>\r\n      <p>{exercise.description}</p>\r\n      <div className=\"code-container\">\r\n        <pre>{exercise.answer.python}</pre>\r\n      </div>\r\n      <button onClick={handleSolveExercise}>Resolver ejercicio</button>\r\n      <div className=\"user-info\">\r\n        <p>Puntos de experiencia: {experience}</p>\r\n        <p>Nivel: {level}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}