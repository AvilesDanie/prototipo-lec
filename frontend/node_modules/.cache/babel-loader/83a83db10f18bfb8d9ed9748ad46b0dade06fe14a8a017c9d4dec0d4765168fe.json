{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserInfo from './UserInfo';\nimport { useDrop } from 'react-dnd';\nimport { useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game1Exercise = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetails, setExerciseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lines, setLines] = useState([]);\n  const [orderedLines, setOrderedLines] = useState([]);\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetails(exerciseDetailsRes.data);\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId, userId]);\n  useEffect(() => {\n    if (exercise && exercise.answer && exercise.answer.python) {\n      const codeLines = exercise.answer.python.split('\\n');\n      const shuffledLines = [...codeLines].sort(() => Math.random() - 0.5); // Aleatoriza las líneas\n      setLines(shuffledLines);\n      setOrderedLines(codeLines); // Guardamos las líneas en el orden correcto\n    }\n  }, [exercise]);\n  const handleGameCompletion = async () => {\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\n    try {\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\n        experiencePoints: experiencePointsEarned\n      });\n    } catch (err) {\n      console.error('Error al actualizar el progreso del usuario');\n    }\n  };\n\n  // Verifica si las líneas ordenadas son iguales a las originales\n  const checkAnswer = () => {\n    const userCode = orderedLines.join('\\n');\n    const correctCode = exercise.answer.python;\n    return userCode === correctCode;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 21\n  }, this);\n  if (!exerciseDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No details available for this exercise.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exerciseDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-lines\",\n        children: lines.map((line, index) => /*#__PURE__*/_jsxDEV(DraggableLine, {\n          index: index,\n          line: line,\n          setOrderedLines: setOrderedLines,\n          orderedLines: orderedLines\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkAnswer() && handleGameCompletion(),\n        children: checkAnswer() ? 'Complete Game' : 'Try Again'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(UserInfo, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n// Componente para las líneas de código que se pueden arrastrar\n_s(Game1Exercise, \"c6fgaCFcfGuVYSzBe0MLlM/uVm4=\", false, function () {\n  return [useParams];\n});\n_c = Game1Exercise;\nconst DraggableLine = ({\n  line,\n  index,\n  setOrderedLines,\n  orderedLines\n}) => {\n  _s2();\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: 'line',\n    item: {\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: 'line',\n    hover: item => {\n      const newOrderedLines = [...orderedLines];\n      const temp = newOrderedLines[item.index];\n      newOrderedLines[item.index] = newOrderedLines[index];\n      newOrderedLines[index] = temp;\n      setOrderedLines(newOrderedLines);\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => drag(drop(node)),\n    style: {\n      opacity: isDragging ? 0.5 : 1\n    },\n    className: \"code-line\",\n    children: line\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s2(DraggableLine, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = DraggableLine;\nexport default Game1Exercise;\nvar _c, _c2;\n$RefreshReg$(_c, \"Game1Exercise\");\n$RefreshReg$(_c2, \"DraggableLine\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","UserInfo","useDrop","useDrag","jsxDEV","_jsxDEV","Game1Exercise","_s","exerciseId","exercise","setExercise","exerciseDetails","setExerciseDetails","user","setUser","loading","setLoading","error","setError","lines","setLines","orderedLines","setOrderedLines","userId","fetchData","exerciseRes","get","data","exerciseDetailsRes","userRes","err","answer","python","codeLines","split","shuffledLines","sort","Math","random","handleGameCompletion","experiencePointsEarned","put","experiencePoints","console","checkAnswer","userCode","join","correctCode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","map","line","index","DraggableLine","onClick","_c","_s2","isDragging","drag","type","item","collect","monitor","drop","accept","hover","newOrderedLines","temp","ref","node","style","opacity","_c2","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserInfo from './UserInfo';\r\nimport { useDrop } from 'react-dnd';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nconst Game1Exercise = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetails, setExerciseDetails] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lines, setLines] = useState([]);\r\n  const [orderedLines, setOrderedLines] = useState([]);\r\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n\r\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetails(exerciseDetailsRes.data);\r\n\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId, userId]);\r\n\r\n  useEffect(() => {\r\n    if (exercise && exercise.answer && exercise.answer.python) {\r\n      const codeLines = exercise.answer.python.split('\\n');\r\n      const shuffledLines = [...codeLines].sort(() => Math.random() - 0.5); // Aleatoriza las líneas\r\n      setLines(shuffledLines);\r\n      setOrderedLines(codeLines); // Guardamos las líneas en el orden correcto\r\n    }\r\n  }, [exercise]);\r\n\r\n  const handleGameCompletion = async () => {\r\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\r\n        experiencePoints: experiencePointsEarned\r\n      });\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso del usuario');\r\n    }\r\n  };\r\n\r\n  // Verifica si las líneas ordenadas son iguales a las originales\r\n  const checkAnswer = () => {\r\n    const userCode = orderedLines.join('\\n');\r\n    const correctCode = exercise.answer.python;\r\n    return userCode === correctCode;\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  if (!exerciseDetails) {\r\n    return <p>No details available for this exercise.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      {/* Contenedor del título y la descripción del ejercicio */}\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetails.name}</h1>\r\n        <p>{exerciseDetails.description}</p>\r\n      </div>\r\n\r\n      {/* Contenedor de las líneas de código */}\r\n      <div className=\"exercise-code\">\r\n        <h2>Python Code</h2>\r\n        <div className=\"code-lines\">\r\n          {lines.map((line, index) => (\r\n            <DraggableLine key={index} index={index} line={line} setOrderedLines={setOrderedLines} orderedLines={orderedLines} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botón para completar el ejercicio */}\r\n      <div className=\"completion-button\">\r\n        <button onClick={() => checkAnswer() && handleGameCompletion()}>\r\n          {checkAnswer() ? 'Complete Game' : 'Try Again'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mostrar la información del usuario */}\r\n      {user && <UserInfo user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Componente para las líneas de código que se pueden arrastrar\r\nconst DraggableLine = ({ line, index, setOrderedLines, orderedLines }) => {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: 'line',\r\n    item: { index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const [, drop] = useDrop(() => ({\r\n    accept: 'line',\r\n    hover: (item) => {\r\n      const newOrderedLines = [...orderedLines];\r\n      const temp = newOrderedLines[item.index];\r\n      newOrderedLines[item.index] = newOrderedLines[index];\r\n      newOrderedLines[index] = temp;\r\n      setOrderedLines(newOrderedLines);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div\r\n      ref={(node) => drag(drop(node))}\r\n      style={{ opacity: isDragging ? 0.5 : 1 }}\r\n      className=\"code-line\"\r\n    >\r\n      {line}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}