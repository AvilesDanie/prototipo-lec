{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Desktop\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game3 = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el ID del ejercicio desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [randomAnswers, setRandomAnswers] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [gameResult, setGameResult] = useState(null);\n  const userId = \"67869f7defd086ba28f87d41\"; // ID del usuario (puedes obtenerlo dinámicamente)\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Obtener los detalles del ejercicio actual\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/${exerciseId}`);\n        const correctAnswer = exerciseRes.data.answer.python; // Solución correcta\n        setExercise(exerciseRes.data);\n\n        // Obtener tres respuestas aleatorias de otros ejercicios\n        const randomAnswersRes = await axios.get(`http://localhost:5000/api/exercises/random-answers?exclude=${exerciseId}&limit=3`);\n        const incorrectAnswers = randomAnswersRes.data.map(ex => ex.answer.python);\n\n        // Combinar las respuestas y aleatorizarlas\n        const combinedOptions = [...incorrectAnswers, correctAnswer].sort(() => Math.random() - 0.5);\n        setRandomAnswers(incorrectAnswers);\n        setOptions(combinedOptions);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al cargar los datos del ejercicio');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId]);\n  const handleAnswerSelection = async selectedAnswer => {\n    const isCorrect = selectedAnswer === exercise.answer.python;\n\n    // Actualizar el progreso del usuario\n    try {\n      const payload = {\n        userId,\n        exerciseId,\n        experiencePoints: isCorrect ? 100 : 0,\n        successful: isCorrect\n      };\n      await axios.put(`http://localhost:5000/api/users/progress-unified`, payload);\n      setGameResult(isCorrect ? 'win' : 'lose');\n    } catch (err) {\n      console.error('Error al actualizar el progreso:', err);\n      setError('Error al actualizar el progreso del usuario');\n    }\n  };\n\n  // Función para volver a la lista de ejercicios\n  const goToExerciseList = () => {\n    navigate('/game/game3');\n  };\n\n  // Función para reiniciar el juego\n  const restartGame = () => {\n    setGameResult(null);\n    setOptions([...options].sort(() => Math.random() - 0.5)); // Reordenar aleatoriamente\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 21\n  }, this);\n  if (!exercise) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Exercise data not available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exercise.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exercise.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select the correct solution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerSelection(option),\n        className: \"option-button\",\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), gameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: gameResult === 'win' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83C\\uDF89 Correct! You won!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToExerciseList,\n          children: \"Back to Exercise List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u274C Incorrect! Try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToExerciseList,\n          children: \"Back to Exercise List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Game3, \"sOsh24XsMTSNhOe90KNhP9SqOkc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game3;\nexport default Game3;\nvar _c;\n$RefreshReg$(_c, \"Game3\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Game3","_s","exerciseId","exercise","setExercise","randomAnswers","setRandomAnswers","options","setOptions","loading","setLoading","error","setError","gameResult","setGameResult","userId","navigate","fetchData","exerciseRes","get","correctAnswer","data","answer","python","randomAnswersRes","incorrectAnswers","map","ex","combinedOptions","sort","Math","random","err","handleAnswerSelection","selectedAnswer","isCorrect","payload","experiencePoints","successful","put","console","goToExerciseList","restartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/erick/Desktop/prototipo-lec/frontend/src/components/Game3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Game3 = () => {\r\n  const { exerciseId } = useParams(); // Captura el ID del ejercicio desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [randomAnswers, setRandomAnswers] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const userId = \"67869f7defd086ba28f87d41\"; // ID del usuario (puedes obtenerlo dinámicamente)\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Obtener los detalles del ejercicio actual\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/${exerciseId}`);\r\n        const correctAnswer = exerciseRes.data.answer.python; // Solución correcta\r\n        setExercise(exerciseRes.data);\r\n\r\n        // Obtener tres respuestas aleatorias de otros ejercicios\r\n        const randomAnswersRes = await axios.get(\r\n          `http://localhost:5000/api/exercises/random-answers?exclude=${exerciseId}&limit=3`\r\n        );\r\n        const incorrectAnswers = randomAnswersRes.data.map((ex) => ex.answer.python);\r\n\r\n        // Combinar las respuestas y aleatorizarlas\r\n        const combinedOptions = [...incorrectAnswers, correctAnswer].sort(() => Math.random() - 0.5);\r\n        setRandomAnswers(incorrectAnswers);\r\n        setOptions(combinedOptions);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al cargar los datos del ejercicio');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId]);\r\n\r\n  const handleAnswerSelection = async (selectedAnswer) => {\r\n    const isCorrect = selectedAnswer === exercise.answer.python;\r\n\r\n    // Actualizar el progreso del usuario\r\n    try {\r\n      const payload = {\r\n        userId,\r\n        exerciseId,\r\n        experiencePoints: isCorrect ? 100 : 0,\r\n        successful: isCorrect,\r\n      };\r\n\r\n      await axios.put(`http://localhost:5000/api/users/progress-unified`, payload);\r\n\r\n      setGameResult(isCorrect ? 'win' : 'lose');\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso:', err);\r\n      setError('Error al actualizar el progreso del usuario');\r\n    }\r\n  };\r\n\r\n  // Función para volver a la lista de ejercicios\r\n  const goToExerciseList = () => {\r\n    navigate('/game/game3');\r\n  };\r\n\r\n  // Función para reiniciar el juego\r\n  const restartGame = () => {\r\n    setGameResult(null);\r\n    setOptions([...options].sort(() => Math.random() - 0.5)); // Reordenar aleatoriamente\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  if (!exercise) return <p>Exercise data not available.</p>;\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      {/* Mostrar los detalles del ejercicio */}\r\n      <div className=\"exercise-info\">\r\n        <h1>{exercise.name}</h1>\r\n        <p>{exercise.description}</p>\r\n      </div>\r\n\r\n      {/* Mostrar las opciones de respuesta */}\r\n      <div className=\"exercise-options\">\r\n        <h2>Select the correct solution:</h2>\r\n        {options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleAnswerSelection(option)}\r\n            className=\"option-button\"\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Mostrar el resultado del juego */}\r\n      {gameResult && (\r\n        <div className=\"result-modal\">\r\n          {gameResult === 'win' ? (\r\n            <>\r\n              <p>🎉 Correct! You won!</p>\r\n              <button onClick={goToExerciseList}>Back to Exercise List</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>❌ Incorrect! Try again!</p>\r\n              <button onClick={restartGame}>Restart</button>\r\n              <button onClick={goToExerciseList}>Back to Exercise List</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}