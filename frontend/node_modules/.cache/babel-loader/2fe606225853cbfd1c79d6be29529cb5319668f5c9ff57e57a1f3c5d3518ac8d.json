{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Documents\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game1.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport UserInfo from './UserInfo';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game1Exercise = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetales, setExerciseDetales] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lines, setLines] = useState([]);\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\n\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener el ejercicio');\n        setLoading(false);\n      }\n    };\n    const fetchExerciseDetalesData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetales(exerciseRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener el ejercicio');\n        setLoading(false);\n      }\n    };\n    const fetchUserData = async () => {\n      try {\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n      } catch (err) {\n        console.error('Error al obtener el usuario');\n      }\n    };\n    fetchExerciseData();\n    fetchUserData();\n    fetchExerciseDetalesData();\n  }, [exerciseId]);\n  const handleGameCompletion = async () => {\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\n    try {\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\n        experiencePoints: experiencePointsEarned\n      });\n    } catch (err) {\n      console.error('Error al actualizar el progreso del usuario');\n    }\n  };\n\n  // Verificar si exerciseDetales está disponible antes de intentar acceder a sus propiedades\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n\n  // Verificamos si exerciseDetales está disponible\n  if (!exerciseDetales) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No details available for this exercise.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Lógica de arrastre y suelta para reorganizar las líneas de código\n  const moveLine = (fromIndex, toIndex) => {\n    const updatedLines = [...lines];\n    const [movedLine] = updatedLines.splice(fromIndex, 1);\n    updatedLines.splice(toIndex, 0, movedLine);\n    setLines(updatedLines);\n  };\n  const Line = ({\n    index,\n    line\n  }) => {\n    _s();\n    const [, drag] = useDrag({\n      type: 'LINE',\n      item: {\n        index\n      }\n    });\n    const [, drop] = useDrop({\n      accept: 'LINE',\n      hover: item => {\n        if (item.index !== index) {\n          moveLine(item.index, index);\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: node => drag(drop(node)),\n      style: {\n        padding: '8px',\n        border: '1px solid #ccc',\n        marginBottom: '5px'\n      },\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Si el ejercicio tiene código, dividimos en líneas para hacer el juego de reordenar\n  _s(Line, \"M+2lH7TPz6U7DDXmQsQLvb5uMb0=\", false, function () {\n    return [useDrag, useDrop];\n  });\n  useEffect(() => {\n    if (exercise && exercise.answer && exercise.answer.python) {\n      const codeLines = exercise.answer.python.split('\\n');\n      setLines(codeLines);\n    }\n  }, [exercise]);\n\n  // Verificar si las líneas de código están en el orden correcto\n  const isCorrectOrder = () => {\n    if (lines.length === 0 || !exerciseDetales) return false;\n    const correctLines = exerciseDetales.correctAnswer.split('\\n');\n    return JSON.stringify(lines) === JSON.stringify(correctLines);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetales.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exerciseDetales.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rearrange the Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), lines.map((line, index) => /*#__PURE__*/_jsxDEV(Line, {\n        index: index,\n        line: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completion-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGameCompletion,\n        disabled: !isCorrectOrder(),\n        children: \"Complete Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(UserInfo, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game1Exercise, \"CLf4hTYxfKQ5EFYVukSoXAx2Rqo=\", false, function () {\n  return [useParams];\n});\n_c = Game1Exercise;\nexport default Game1Exercise;\nvar _c;\n$RefreshReg$(_c, \"Game1Exercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","UserInfo","useDrag","useDrop","jsxDEV","_jsxDEV","Game1Exercise","_s2","_s","$RefreshSig$","exerciseId","exercise","setExercise","exerciseDetales","setExerciseDetales","user","setUser","loading","setLoading","error","setError","lines","setLines","userId","fetchExerciseData","exerciseRes","get","data","err","fetchExerciseDetalesData","fetchUserData","userRes","console","handleGameCompletion","experiencePointsEarned","put","experiencePoints","children","fileName","_jsxFileName","lineNumber","columnNumber","moveLine","fromIndex","toIndex","updatedLines","movedLine","splice","Line","index","line","drag","type","item","drop","accept","hover","ref","node","style","padding","border","marginBottom","answer","python","codeLines","split","isCorrectOrder","length","correctLines","correctAnswer","JSON","stringify","className","name","description","map","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/erick/Documents/prototipo-lec/frontend/src/components/Game1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserInfo from './UserInfo';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nconst Game1Exercise = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetales, setExerciseDetales] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lines, setLines] = useState([]);\r\n  const userId = \"67869fc8efd086ba28f87d43\"; // ID del usuario (puedes obtenerlo dinámicamente)\r\n\r\n  useEffect(() => {\r\n    const fetchExerciseData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener el ejercicio');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchExerciseDetalesData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetales(exerciseRes.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener el ejercicio');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n      } catch (err) {\r\n        console.error('Error al obtener el usuario');\r\n      }\r\n    };\r\n\r\n    fetchExerciseData();\r\n    fetchUserData();\r\n    fetchExerciseDetalesData();\r\n  }, [exerciseId]);\r\n\r\n  const handleGameCompletion = async () => {\r\n    const experiencePointsEarned = 100; // Suponiendo que el jugador gana 100 puntos por completar el ejercicio\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/users/${userId}/progress`, {\r\n        experiencePoints: experiencePointsEarned\r\n      });\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso del usuario');\r\n    }\r\n  };\r\n\r\n  // Verificar si exerciseDetales está disponible antes de intentar acceder a sus propiedades\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  // Verificamos si exerciseDetales está disponible\r\n  if (!exerciseDetales) {\r\n    return <p>No details available for this exercise.</p>;\r\n  }\r\n\r\n  // Lógica de arrastre y suelta para reorganizar las líneas de código\r\n  const moveLine = (fromIndex, toIndex) => {\r\n    const updatedLines = [...lines];\r\n    const [movedLine] = updatedLines.splice(fromIndex, 1);\r\n    updatedLines.splice(toIndex, 0, movedLine);\r\n    setLines(updatedLines);\r\n  };\r\n\r\n  const Line = ({ index, line }) => {\r\n    const [, drag] = useDrag({\r\n      type: 'LINE',\r\n      item: { index }\r\n    });\r\n\r\n    const [, drop] = useDrop({\r\n      accept: 'LINE',\r\n      hover: (item) => {\r\n        if (item.index !== index) {\r\n          moveLine(item.index, index);\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div ref={(node) => drag(drop(node))} style={{ padding: '8px', border: '1px solid #ccc', marginBottom: '5px' }}>\r\n        {line}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Si el ejercicio tiene código, dividimos en líneas para hacer el juego de reordenar\r\n  useEffect(() => {\r\n    if (exercise && exercise.answer && exercise.answer.python) {\r\n      const codeLines = exercise.answer.python.split('\\n');\r\n      setLines(codeLines);\r\n    }\r\n  }, [exercise]);\r\n\r\n  // Verificar si las líneas de código están en el orden correcto\r\n  const isCorrectOrder = () => {\r\n    if (lines.length === 0 || !exerciseDetales) return false;\r\n    const correctLines = exerciseDetales.correctAnswer.split('\\n');\r\n    return JSON.stringify(lines) === JSON.stringify(correctLines);\r\n  };\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      {/* Contenedor del título y la descripción del ejercicio */}\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetales.name}</h1>\r\n        <p>{exerciseDetales.description}</p>\r\n      </div>\r\n\r\n      {/* Contenedor de las líneas de código */}\r\n      <div className=\"exercise-code\">\r\n        <h2>Rearrange the Code</h2>\r\n        {lines.map((line, index) => (\r\n          <Line key={index} index={index} line={line} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Botón para completar el ejercicio */}\r\n      <div className=\"completion-button\">\r\n        <button onClick={handleGameCompletion} disabled={!isCorrectOrder()}>Complete Game</button>\r\n      </div>\r\n\r\n      {/* Mostrar la información del usuario */}\r\n      {user && <UserInfo user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game1Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}