{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Desktop\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game3 = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el ID del ejercicio desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [gameResult, setGameResult] = useState(null);\n  const userId = \"67869f7defd086ba28f87d41\"; // ID del usuario\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        // Obtener el ejercicio y su respuesta correcta\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        const exerciseData = exerciseRes.data;\n\n        // Obtener tres soluciones aleatorias de otros ejercicios\n        const randomSolutionsRes = await axios.get('http://localhost:5000/api/exercises/random-solutions', {\n          params: {\n            exclude: exerciseData.cod,\n            limit: 3\n          }\n        });\n        const randomSolutions = randomSolutionsRes.data.map(item => item.answer.python);\n\n        // Combinar y aleatorizar las opciones\n        const allOptions = [exerciseData.answer.python, ...randomSolutions];\n        const shuffledOptions = allOptions.sort(() => Math.random() - 0.5);\n        setExercise(exerciseData);\n        setOptions(shuffledOptions);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching data');\n        setLoading(false);\n      }\n    };\n    fetchExerciseData();\n  }, [exerciseId]);\n  const handleOptionSelect = selectedOption => {\n    if (selectedOption === exercise.answer.python) {\n      handleGameCompletion(true); // Gan贸\n    } else {\n      handleGameCompletion(false); // Perdi贸\n    }\n  };\n  const handleGameCompletion = async isWin => {\n    try {\n      const payload = {\n        userId,\n        exerciseId,\n        experiencePoints: isWin ? 100 : 0,\n        successful: isWin\n      };\n      await axios.put('http://localhost:5000/api/users/progress-unified', payload);\n      setGameResult(isWin ? 'win' : 'lose');\n    } catch (err) {\n      console.error('Error updating user progress:', err);\n    }\n  };\n  const goToExerciseList = () => {\n    navigate('/game/game3');\n  };\n  const restartGame = () => {\n    setGameResult(null);\n    setOptions(options.sort(() => Math.random() - 0.5)); // Reordenar las opciones\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: exercise.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: exercise.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionSelect(option),\n        className: \"option-button\",\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), gameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: gameResult === 'win' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Congratulations! You selected the correct answer!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToExerciseList,\n          children: \"Back to Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Wrong answer! Try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToExerciseList,\n          children: \"Back to Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Game3, \"FmeOqof1jyZm65C3H8isQAdJGKc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game3;\nexport default Game3;\nvar _c;\n$RefreshReg$(_c, \"Game3\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Game3","_s","exerciseId","exercise","setExercise","options","setOptions","loading","setLoading","error","setError","gameResult","setGameResult","userId","navigate","fetchExerciseData","exerciseRes","get","exerciseData","data","randomSolutionsRes","params","exclude","cod","limit","randomSolutions","map","item","answer","python","allOptions","shuffledOptions","sort","Math","random","err","handleOptionSelect","selectedOption","handleGameCompletion","isWin","payload","experiencePoints","successful","put","console","goToExerciseList","restartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/erick/Desktop/prototipo-lec/frontend/src/components/Game3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Game3 = () => {\r\n  const { exerciseId } = useParams(); // Captura el ID del ejercicio desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const userId = \"67869f7defd086ba28f87d41\"; // ID del usuario\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchExerciseData = async () => {\r\n      try {\r\n        // Obtener el ejercicio y su respuesta correcta\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        const exerciseData = exerciseRes.data;\r\n\r\n        // Obtener tres soluciones aleatorias de otros ejercicios\r\n        const randomSolutionsRes = await axios.get('http://localhost:5000/api/exercises/random-solutions', {\r\n          params: { exclude: exerciseData.cod, limit: 3 },\r\n        });\r\n\r\n        const randomSolutions = randomSolutionsRes.data.map(item => item.answer.python);\r\n\r\n        // Combinar y aleatorizar las opciones\r\n        const allOptions = [exerciseData.answer.python, ...randomSolutions];\r\n        const shuffledOptions = allOptions.sort(() => Math.random() - 0.5);\r\n\r\n        setExercise(exerciseData);\r\n        setOptions(shuffledOptions);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error fetching data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExerciseData();\r\n  }, [exerciseId]);\r\n\r\n  const handleOptionSelect = (selectedOption) => {\r\n    if (selectedOption === exercise.answer.python) {\r\n      handleGameCompletion(true); // Gan贸\r\n    } else {\r\n      handleGameCompletion(false); // Perdi贸\r\n    }\r\n  };\r\n\r\n  const handleGameCompletion = async (isWin) => {\r\n    try {\r\n      const payload = {\r\n        userId,\r\n        exerciseId,\r\n        experiencePoints: isWin ? 100 : 0,\r\n        successful: isWin,\r\n      };\r\n\r\n      await axios.put('http://localhost:5000/api/users/progress-unified', payload);\r\n\r\n      setGameResult(isWin ? 'win' : 'lose');\r\n    } catch (err) {\r\n      console.error('Error updating user progress:', err);\r\n    }\r\n  };\r\n\r\n  const goToExerciseList = () => {\r\n    navigate('/game/game3');\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setGameResult(null);\r\n    setOptions(options.sort(() => Math.random() - 0.5)); // Reordenar las opciones\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h1>{exercise.name}</h1>\r\n      <p>{exercise.description}</p>\r\n\r\n      <div className=\"options-container\">\r\n        {options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleOptionSelect(option)}\r\n            className=\"option-button\"\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {gameResult && (\r\n        <div className=\"result-modal\">\r\n          {gameResult === 'win' ? (\r\n            <>\r\n              <p>Congratulations! You selected the correct answer!</p>\r\n              <button onClick={goToExerciseList}>Back to Exercises</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>Wrong answer! Try again!</p>\r\n              <button onClick={restartGame}>Restart</button>\r\n              <button onClick={goToExerciseList}>Back to Exercises</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}