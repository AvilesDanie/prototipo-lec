{"ast":null,"code":"var _jsxFileName = \"D:\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/Game2.css'; // Importar el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game2Exercise = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetails, setExerciseDetails] = useState(null);\n  const [modifiedCode, setModifiedCode] = useState(''); // Nuevo estado para el código modificado\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [correctLine, setCorrectLine] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [gameResult, setGameResult] = useState(null); // Resultado del juego\n  const userId = '67869f7defd086ba28f87d41'; // ID del usuario\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetails(exerciseDetailsRes.data);\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId, userId]);\n  useEffect(() => {\n    const fetchIncorrectOptions = async () => {\n      try {\n        if (exercise && exercise.answer && exercise.answer.python) {\n          const codeLines = exercise.answer.python.split('\\n');\n          const lineIndex = Math.floor(Math.random() * codeLines.length); // Escoger una línea aleatoria\n          setCorrectLine(codeLines[lineIndex]);\n\n          // Obtener líneas aleatorias de otros ejercicios\n          const otherExercisesRes = await axios.get(`http://localhost:5000/api/exercises`);\n          const otherExercises = otherExercisesRes.data.filter(ex => ex.codewarsId !== exerciseId);\n          const incorrectOptions = [];\n          while (incorrectOptions.length < 3 && otherExercises.length > 0) {\n            const randomExercise = otherExercises[Math.floor(Math.random() * otherExercises.length)];\n            const lines = randomExercise.answer.python.split('\\n');\n            const randomLine = lines[Math.floor(Math.random() * lines.length)];\n            if (!incorrectOptions.includes(randomLine) && randomLine !== codeLines[lineIndex]) {\n              incorrectOptions.push(randomLine);\n            }\n          }\n\n          // Crear opciones\n          const allOptions = [codeLines[lineIndex], ...incorrectOptions];\n          const shuffledOptions = allOptions.sort(() => Math.random() - 0.5);\n          setOptions(shuffledOptions);\n\n          // Modificar el código para que falte la línea correcta\n          const modifiedLines = [...codeLines];\n          modifiedLines[lineIndex] = '________';\n          setModifiedCode(modifiedLines.join('\\n')); // Guardar el código modificado\n        }\n      } catch (err) {\n        console.error('Error al obtener las opciones incorrectas:', err);\n      }\n    };\n    fetchIncorrectOptions();\n  }, [exercise]);\n  const handleOptionSelect = async option => {\n    setSelectedOption(option);\n    if (option === correctLine) {\n      await handleGameCompletion(true);\n    } else {\n      await handleGameCompletion(false); // Esto asegura que los tags incorrectos se actualicen.\n    }\n  };\n  const handleGameCompletion = async isWin => {\n    try {\n      const payload = {\n        userId,\n        exerciseId,\n        experiencePoints: isWin ? 100 : 0,\n        // 100 puntos si gana\n        successful: isWin // Determina si el intento fue exitoso\n      };\n      console.log('Payload enviado:', payload);\n      const response = await axios.put(`http://localhost:5000/api/users/progress-unified`, payload);\n      console.log('Respuesta del backend:', response.data);\n      if (isWin) {\n        setGameResult('win');\n      } else {\n        setGameResult('lose');\n      }\n    } catch (err) {\n      console.error('Error al actualizar el progreso:', err);\n      alert('Ocurrió un error al actualizar el progreso. Por favor, intenta nuevamente.');\n    }\n  };\n  const restartGame = () => {\n    setGameResult(null);\n    setSelectedOption('');\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetails === null || exerciseDetails === void 0 ? void 0 : exerciseDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: exerciseDetails.description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) || \"No Description Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: modifiedCode || 'Cargando código...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option ${selectedOption === option ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), gameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: [gameResult === 'win' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Correcto! Has completado el ejercicio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Incorrecto! Intenta nuevamente.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Reintentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/game/game2'),\n        children: \"Volver a la lista de ejercicios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Game2Exercise, \"PhZ3e8oL0//THbkfs8RoooWyu+k=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game2Exercise;\nexport default Game2Exercise;\nvar _c;\n$RefreshReg$(_c, \"Game2Exercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Game2Exercise","_s","exerciseId","exercise","setExercise","exerciseDetails","setExerciseDetails","modifiedCode","setModifiedCode","user","setUser","loading","setLoading","error","setError","options","setOptions","correctLine","setCorrectLine","selectedOption","setSelectedOption","gameResult","setGameResult","userId","navigate","fetchData","exerciseRes","get","data","exerciseDetailsRes","userRes","err","fetchIncorrectOptions","answer","python","codeLines","split","lineIndex","Math","floor","random","length","otherExercisesRes","otherExercises","filter","ex","codewarsId","incorrectOptions","randomExercise","lines","randomLine","includes","push","allOptions","shuffledOptions","sort","modifiedLines","join","console","handleOptionSelect","option","handleGameCompletion","isWin","payload","experiencePoints","successful","log","response","put","alert","restartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","dangerouslySetInnerHTML","__html","description","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/prototipo-lec/frontend/src/components/Game2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../css/Game2.css';  // Importar el archivo CSS\r\n\r\nconst Game2Exercise = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetails, setExerciseDetails] = useState(null);\r\n  const [modifiedCode, setModifiedCode] = useState(''); // Nuevo estado para el código modificado\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n  const [correctLine, setCorrectLine] = useState('');\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [gameResult, setGameResult] = useState(null); // Resultado del juego\r\n  const userId = '67869f7defd086ba28f87d41'; // ID del usuario\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n\r\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetails(exerciseDetailsRes.data);\r\n\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId, userId]);\r\n\r\n  useEffect(() => {\r\n    const fetchIncorrectOptions = async () => {\r\n      try {\r\n        if (exercise && exercise.answer && exercise.answer.python) {\r\n          const codeLines = exercise.answer.python.split('\\n');\r\n          const lineIndex = Math.floor(Math.random() * codeLines.length); // Escoger una línea aleatoria\r\n          setCorrectLine(codeLines[lineIndex]);\r\n\r\n          // Obtener líneas aleatorias de otros ejercicios\r\n          const otherExercisesRes = await axios.get(`http://localhost:5000/api/exercises`);\r\n          const otherExercises = otherExercisesRes.data.filter((ex) => ex.codewarsId !== exerciseId);\r\n\r\n          const incorrectOptions = [];\r\n          while (incorrectOptions.length < 3 && otherExercises.length > 0) {\r\n            const randomExercise = otherExercises[Math.floor(Math.random() * otherExercises.length)];\r\n            const lines = randomExercise.answer.python.split('\\n');\r\n            const randomLine = lines[Math.floor(Math.random() * lines.length)];\r\n            if (!incorrectOptions.includes(randomLine) && randomLine !== codeLines[lineIndex]) {\r\n              incorrectOptions.push(randomLine);\r\n            }\r\n          }\r\n\r\n          // Crear opciones\r\n          const allOptions = [codeLines[lineIndex], ...incorrectOptions];\r\n          const shuffledOptions = allOptions.sort(() => Math.random() - 0.5);\r\n          setOptions(shuffledOptions);\r\n\r\n          // Modificar el código para que falte la línea correcta\r\n          const modifiedLines = [...codeLines];\r\n          modifiedLines[lineIndex] = '________';\r\n          setModifiedCode(modifiedLines.join('\\n')); // Guardar el código modificado\r\n        }\r\n      } catch (err) {\r\n        console.error('Error al obtener las opciones incorrectas:', err);\r\n      }\r\n    };\r\n\r\n    fetchIncorrectOptions();\r\n  }, [exercise]);\r\n\r\n  const handleOptionSelect = async (option) => {\r\n    setSelectedOption(option);\r\n    if (option === correctLine) {\r\n      await handleGameCompletion(true);\r\n    } else {\r\n      await handleGameCompletion(false); // Esto asegura que los tags incorrectos se actualicen.\r\n    }\r\n  };\r\n  \r\n\r\n  const handleGameCompletion = async (isWin) => {\r\n    try {\r\n      const payload = {\r\n        userId,\r\n        exerciseId,\r\n        experiencePoints: isWin ? 100 : 0, // 100 puntos si gana\r\n        successful: isWin, // Determina si el intento fue exitoso\r\n      };\r\n  \r\n      console.log('Payload enviado:', payload);\r\n  \r\n      const response = await axios.put(`http://localhost:5000/api/users/progress-unified`, payload);\r\n  \r\n      console.log('Respuesta del backend:', response.data);\r\n  \r\n      if (isWin) {\r\n        setGameResult('win');\r\n      } else {\r\n        setGameResult('lose');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso:', err);\r\n      alert('Ocurrió un error al actualizar el progreso. Por favor, intenta nuevamente.');\r\n    }\r\n  };\r\n  \r\n\r\n  const restartGame = () => {\r\n    setGameResult(null);\r\n    setSelectedOption('');\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetails?.name}</h1>\r\n        <p>{<div>\r\n      {/* Renderizamos el HTML usando dangerouslySetInnerHTML */}\r\n      <div dangerouslySetInnerHTML={{ __html: exerciseDetails.description }} />\r\n    </div> || \"No Description Available\"}</p>\r\n      </div>\r\n\r\n      <div className=\"exercise-code\">\r\n        <h2>Python Code</h2>\r\n        <pre>{modifiedCode || 'Cargando código...'}</pre>\r\n      </div>\r\n\r\n      <div className=\"options\">\r\n        {options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            className={`option ${selectedOption === option ? 'selected' : ''}`}\r\n            onClick={() => handleOptionSelect(option)}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {gameResult && (\r\n        <div className=\"result-modal\">\r\n          {gameResult === 'win' ? (\r\n            <p>¡Correcto! Has completado el ejercicio.</p>\r\n          ) : (\r\n            <p>¡Incorrecto! Intenta nuevamente.</p>\r\n          )}\r\n          <button onClick={restartGame}>Reintentar</button>\r\n          <button onClick={() => navigate('/game/game2')}>Volver a la lista de ejercicios</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game2Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}