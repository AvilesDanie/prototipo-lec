{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Desktop\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game3.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game3 = ({\n  exerciseId\n}) => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [solutions, setSolutions] = useState([]);\n  const [correctSolution, setCorrectSolution] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchGameData = async () => {\n      try {\n        // 1. Consultar descripción del ejercicio desde la API de Codewars\n        const exerciseResponse = await axios.get(`http://localhost:5000/api/exercises/${exerciseId}`);\n        const exercise = exerciseResponse.data;\n        setDescription(exercise.description);\n\n        // 2. Obtener solución del ejercicio actual\n        const correctSolution = exercise.solution;\n        setCorrectSolution(correctSolution);\n\n        // 3. Obtener 3 soluciones aleatorias desde la base de datos (excluyendo el actual)\n        const randomSolutionsResponse = await axios.get(`http://localhost:5000/api/exercises/random-answers?exclude=${exerciseId}&limit=3`);\n        const randomSolutions = randomSolutionsResponse.data.map(exercise => exercise.solution);\n\n        // 4. Combinar la solución correcta con las aleatorias y mezclar el orden\n        const allSolutions = [correctSolution, ...randomSolutions];\n        const shuffledSolutions = allSolutions.sort(() => Math.random() - 0.5);\n        setSolutions(shuffledSolutions);\n      } catch (error) {\n        console.error('Error fetching game data:', error);\n      }\n    };\n    fetchGameData();\n  }, [exerciseId]);\n\n  // 5. Manejar la selección del usuario\n  const handleSolutionClick = selectedSolution => {\n    if (selectedSolution === correctSolution) {\n      setMessage('Correct! You win!');\n    } else {\n      setMessage('Incorrect! Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game 3: Select the Correct Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: solutions.map((solution, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSolutionClick(solution),\n        style: {\n          margin: '5px',\n          padding: '10px'\n        },\n        children: solution\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Game3, \"MHS9KEbL4fFgMQQaO/6xcyBhUGc=\");\n_c = Game3;\nexport default Game3;\nvar _c;\n$RefreshReg$(_c, \"Game3\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Game3","exerciseId","_s","description","setDescription","solutions","setSolutions","correctSolution","setCorrectSolution","message","setMessage","fetchGameData","exerciseResponse","get","exercise","data","solution","randomSolutionsResponse","randomSolutions","map","allSolutions","shuffledSolutions","sort","Math","random","error","console","handleSolutionClick","selectedSolution","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","style","margin","padding","_c","$RefreshReg$"],"sources":["C:/Users/erick/Desktop/prototipo-lec/frontend/src/components/Game3.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Game3 = ({ exerciseId }) => {\r\n  const [description, setDescription] = useState('');\r\n  const [solutions, setSolutions] = useState([]);\r\n  const [correctSolution, setCorrectSolution] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchGameData = async () => {\r\n      try {\r\n        // 1. Consultar descripción del ejercicio desde la API de Codewars\r\n        const exerciseResponse = await axios.get(\r\n          `http://localhost:5000/api/exercises/${exerciseId}`\r\n        );\r\n        const exercise = exerciseResponse.data;\r\n        setDescription(exercise.description);\r\n\r\n        // 2. Obtener solución del ejercicio actual\r\n        const correctSolution = exercise.solution;\r\n        setCorrectSolution(correctSolution);\r\n\r\n        // 3. Obtener 3 soluciones aleatorias desde la base de datos (excluyendo el actual)\r\n        const randomSolutionsResponse = await axios.get(\r\n          `http://localhost:5000/api/exercises/random-answers?exclude=${exerciseId}&limit=3`\r\n        );\r\n        const randomSolutions = randomSolutionsResponse.data.map(\r\n          (exercise) => exercise.solution\r\n        );\r\n\r\n        // 4. Combinar la solución correcta con las aleatorias y mezclar el orden\r\n        const allSolutions = [correctSolution, ...randomSolutions];\r\n        const shuffledSolutions = allSolutions.sort(() => Math.random() - 0.5);\r\n        setSolutions(shuffledSolutions);\r\n      } catch (error) {\r\n        console.error('Error fetching game data:', error);\r\n      }\r\n    };\r\n\r\n    fetchGameData();\r\n  }, [exerciseId]);\r\n\r\n  // 5. Manejar la selección del usuario\r\n  const handleSolutionClick = (selectedSolution) => {\r\n    if (selectedSolution === correctSolution) {\r\n      setMessage('Correct! You win!');\r\n    } else {\r\n      setMessage('Incorrect! Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Game 3: Select the Correct Answer</h2>\r\n      <p>{description}</p>\r\n      <div>\r\n        {solutions.map((solution, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleSolutionClick(solution)}\r\n            style={{ margin: '5px', padding: '10px' }}\r\n          >\r\n            {solution}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}