{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erick\\\\Desktop\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport '../css/Game3.css'; // Importar el archivo CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game3 = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams();\n  const [exercise, setExercise] = useState(null);\n  const [solutions, setSolutions] = useState([]);\n  const [correctSolution, setCorrectSolution] = useState('');\n  const [gameResult, setGameResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(30); // Temporizador de 30 segundos\n  const userId = \"67869f7defd086ba28f87d41\";\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const solutionRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setCorrectSolution(solutionRes.data.answer.python);\n        const randomSolutionsRes = await axios.get(`http://localhost:5000/api/exercises/random/${exerciseId}`);\n        const randomSolutions = randomSolutionsRes.data.map(item => item.answer.python);\n        const combinedSolutions = [...randomSolutions, solutionRes.data.answer.python];\n        const shuffledSolutions = combinedSolutions.sort(() => Math.random() - 0.5);\n        setSolutions(shuffledSolutions);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setGameResult('timeout'); // Tiempo agotado\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer); // Limpieza del intervalo\n  }, []);\n  const handleButtonClick = async selectedSolution => {\n    if (selectedSolution === correctSolution) {\n      setGameResult('win');\n      try {\n        await axios.put(`http://localhost:5000/api/users/progress-unified`, {\n          userId,\n          // El ID del usuario\n          exerciseId,\n          // El ID del ejercicio\n          experiencePoints: timeLeft > 15 ? 150 : 100,\n          // Puntos de experiencia\n          successful: selectedSolution === correctSolution // Si la respuesta es correcta\n        });\n      } catch (err) {\n        console.error('Error al actualizar el progreso del usuario');\n      }\n    } else {\n      setGameResult('lose');\n    }\n  };\n  const goToExerciseList = () => {\n    navigate('/game/game3');\n  };\n  const restartGame = () => {\n    setGameResult(null);\n    setTimeLeft(30); // Reiniciar el temporizador\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exercise === null || exercise === void 0 ? void 0 : exercise.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: exercise.description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) || \"No Description Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Tiempo restante: \", timeLeft, \" segundos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solutions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona la soluci\\xF3n correcta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), solutions.map((solution, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `solution-button ${gameResult && solution === correctSolution ? 'correct' : ''}`,\n        onClick: () => handleButtonClick(solution),\n        disabled: !!gameResult // Desactiva los botones si ya hay resultado\n        ,\n        children: solution\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), gameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: gameResult === 'win' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA1Has ganado! Obtuviste \", timeLeft > 15 ? 150 : 100, \" puntos de experiencia.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToExerciseList,\n          children: \"Volver a la lista de ejercicios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : gameResult === 'timeout' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA1Tiempo agotado! Int\\xE9ntalo de nuevo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA1Has perdido! Int\\xE9ntalo de nuevo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restartGame,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Game3, \"6eIr3FbLhbstRB2vCBzav+CnEXg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game3;\nexport default Game3;\nvar _c;\n$RefreshReg$(_c, \"Game3\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Game3","_s","exerciseId","exercise","setExercise","solutions","setSolutions","correctSolution","setCorrectSolution","gameResult","setGameResult","loading","setLoading","error","setError","timeLeft","setTimeLeft","userId","navigate","fetchData","exerciseRes","get","data","solutionRes","answer","python","randomSolutionsRes","randomSolutions","map","item","combinedSolutions","shuffledSolutions","sort","Math","random","err","timer","setInterval","prev","clearInterval","handleButtonClick","selectedSolution","put","experiencePoints","successful","console","goToExerciseList","restartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","dangerouslySetInnerHTML","__html","description","solution","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/erick/Desktop/prototipo-lec/frontend/src/components/Game3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport '../css/Game3.css';  // Importar el archivo CSS\r\n\r\nconst Game3 = () => {\r\n  const { exerciseId } = useParams();\r\n  const [exercise, setExercise] = useState(null);\r\n  const [solutions, setSolutions] = useState([]);\r\n  const [correctSolution, setCorrectSolution] = useState('');\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(30); // Temporizador de 30 segundos\r\n  const userId = \"67869f7defd086ba28f87d41\";\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n        const solutionRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setCorrectSolution(solutionRes.data.answer.python);\r\n\r\n        const randomSolutionsRes = await axios.get(`http://localhost:5000/api/exercises/random/${exerciseId}`);\r\n        const randomSolutions = randomSolutionsRes.data.map((item) => item.answer.python);\r\n\r\n        const combinedSolutions = [...randomSolutions, solutionRes.data.answer.python];\r\n        const shuffledSolutions = combinedSolutions.sort(() => Math.random() - 0.5);\r\n\r\n        setSolutions(shuffledSolutions);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timer);\r\n          setGameResult('timeout'); // Tiempo agotado\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer); // Limpieza del intervalo\r\n  }, []);\r\n\r\n  const handleButtonClick = async (selectedSolution) => {\r\n    if (selectedSolution === correctSolution) {\r\n      setGameResult('win');\r\n      try {\r\n        await axios.put(`http://localhost:5000/api/users/progress-unified`, {\r\n          userId, // El ID del usuario\r\n          exerciseId, // El ID del ejercicio\r\n          experiencePoints: timeLeft > 15 ? 150 : 100, // Puntos de experiencia\r\n          successful: selectedSolution === correctSolution // Si la respuesta es correcta\r\n        });\r\n      } catch (err) {\r\n        console.error('Error al actualizar el progreso del usuario');\r\n      }\r\n    } else {\r\n      setGameResult('lose');\r\n    }\r\n  };\r\n\r\n  const goToExerciseList = () => {\r\n    navigate('/game/game3');\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setGameResult(null);\r\n    setTimeLeft(30); // Reiniciar el temporizador\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"exercise-info\">\r\n        <h1>{exercise?.name}</h1>\r\n        <p>{<div>\r\n      {/* Renderizamos el HTML usando dangerouslySetInnerHTML */}\r\n      <div dangerouslySetInnerHTML={{ __html: exercise.description }} />\r\n    </div> || \"No Description Available\"}</p>\r\n        <p><strong>Tiempo restante: {timeLeft} segundos</strong></p>\r\n      </div>\r\n\r\n      <div className=\"solutions\">\r\n        <h2>Selecciona la solución correcta:</h2>\r\n        {solutions.map((solution, index) => (\r\n          <button\r\n            key={index}\r\n            className={`solution-button ${gameResult && solution === correctSolution ? 'correct' : ''}`}\r\n            onClick={() => handleButtonClick(solution)}\r\n            disabled={!!gameResult} // Desactiva los botones si ya hay resultado\r\n          >\r\n            {solution}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {gameResult && (\r\n        <div className=\"result-modal\">\r\n          {gameResult === 'win' ? (\r\n            <>\r\n              <p>¡Has ganado! Obtuviste {timeLeft > 15 ? 150 : 100} puntos de experiencia.</p>\r\n              <button onClick={goToExerciseList}>Volver a la lista de ejercicios</button>\r\n            </>\r\n          ) : gameResult === 'timeout' ? (\r\n            <>\r\n              <p>¡Tiempo agotado! Inténtalo de nuevo.</p>\r\n              <button onClick={restartGame}>Reintentar</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p>¡Has perdido! Inténtalo de nuevo.</p>\r\n              <button onClick={restartGame}>Reintentar</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}