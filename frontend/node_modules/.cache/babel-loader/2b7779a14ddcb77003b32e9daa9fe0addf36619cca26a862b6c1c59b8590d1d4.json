{"ast":null,"code":"var _jsxFileName = \"D:\\\\prototipo-lec\\\\frontend\\\\src\\\\components\\\\Game2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game2 = () => {\n  _s();\n  const {\n    exerciseId\n  } = useParams(); // Captura el codewarsId desde la URL\n  const [exercise, setExercise] = useState(null);\n  const [exerciseDetails, setExerciseDetails] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [correctLine, setCorrectLine] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [gameResult, setGameResult] = useState(null); // Resultado del juego\n  const userId = '67869f7defd086ba28f87d41'; // ID del usuario\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\n        setExercise(exerciseRes.data);\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\n        setExerciseDetails(exerciseDetailsRes.data);\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\n        setUser(userRes.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los datos');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [exerciseId, userId]);\n  useEffect(() => {\n    if (exercise && exercise.answer && exercise.answer.python) {\n      const codeLines = exercise.answer.python.split('\\n');\n      const lineIndex = Math.floor(Math.random() * codeLines.length); // Escoger una línea aleatoria\n      setCorrectLine(codeLines[lineIndex]);\n\n      // Generar opciones aleatorias\n      const allOptions = [codeLines[lineIndex], 'Incorrect Option 1', 'Incorrect Option 2', 'Incorrect Option 3'];\n      const shuffledOptions = allOptions.sort(() => Math.random() - 0.5);\n      setOptions(shuffledOptions);\n\n      // Modificar el código para que falte la línea correcta\n      codeLines[lineIndex] = '________';\n      setExerciseDetails(prev => ({\n        ...prev,\n        modifiedCode: codeLines.join('\\n')\n      }));\n    }\n  }, [exercise]);\n  const handleOptionSelect = async option => {\n    setSelectedOption(option);\n    if (option === correctLine) {\n      setGameResult('win');\n      await handleGameCompletion(true);\n    } else {\n      setGameResult('lose');\n    }\n  };\n  const handleGameCompletion = async isWin => {\n    try {\n      const payload = {\n        userId,\n        exerciseId,\n        experiencePoints: isWin ? 100 : 0,\n        successful: isWin\n      };\n      await axios.put(`http://localhost:5000/api/users/progress-unified`, payload);\n    } catch (err) {\n      console.error('Error al actualizar el progreso del usuario:', err);\n    }\n  };\n  const restartGame = () => {\n    setGameResult(null);\n    setSelectedOption('');\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: exerciseDetails === null || exerciseDetails === void 0 ? void 0 : exerciseDetails.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exerciseDetails === null || exerciseDetails === void 0 ? void 0 : exerciseDetails.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-code\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Python Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: exerciseDetails === null || exerciseDetails === void 0 ? void 0 : exerciseDetails.modifiedCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option ${selectedOption === option ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), gameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-modal\",\n      children: [gameResult === 'win' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Correcto! Has completado el ejercicio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA1Incorrecto! Intenta nuevamente.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"Reintentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/game/game2'),\n        children: \"Volver a la lista de ejercicios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Game2, \"yu28dI1S9mFBkY2Bh0gaEcMw3XM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game2;\nexport default Game2Exercise;\nvar _c;\n$RefreshReg$(_c, \"Game2\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Game2","_s","exerciseId","exercise","setExercise","exerciseDetails","setExerciseDetails","user","setUser","loading","setLoading","error","setError","options","setOptions","correctLine","setCorrectLine","selectedOption","setSelectedOption","gameResult","setGameResult","userId","navigate","fetchData","exerciseRes","get","data","exerciseDetailsRes","userRes","err","answer","python","codeLines","split","lineIndex","Math","floor","random","length","allOptions","shuffledOptions","sort","prev","modifiedCode","join","handleOptionSelect","option","handleGameCompletion","isWin","payload","experiencePoints","successful","put","console","restartGame","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","map","index","onClick","_c","Game2Exercise","$RefreshReg$"],"sources":["D:/prototipo-lec/frontend/src/components/Game2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst Game2 = () => {\r\n  const { exerciseId } = useParams(); // Captura el codewarsId desde la URL\r\n  const [exercise, setExercise] = useState(null);\r\n  const [exerciseDetails, setExerciseDetails] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n  const [correctLine, setCorrectLine] = useState('');\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [gameResult, setGameResult] = useState(null); // Resultado del juego\r\n  const userId = '67869f7defd086ba28f87d41'; // ID del usuario\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const exerciseRes = await axios.get(`http://localhost:5000/api/exercises/codewars/${exerciseId}`);\r\n        setExercise(exerciseRes.data);\r\n\r\n        const exerciseDetailsRes = await axios.get(`http://localhost:5000/api/codewars/challenge/${exerciseId}`);\r\n        setExerciseDetails(exerciseDetailsRes.data);\r\n\r\n        const userRes = await axios.get(`http://localhost:5000/api/users/${userId}`);\r\n        setUser(userRes.data);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error al obtener los datos');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [exerciseId, userId]);\r\n\r\n  useEffect(() => {\r\n    if (exercise && exercise.answer && exercise.answer.python) {\r\n      const codeLines = exercise.answer.python.split('\\n');\r\n      const lineIndex = Math.floor(Math.random() * codeLines.length); // Escoger una línea aleatoria\r\n      setCorrectLine(codeLines[lineIndex]);\r\n\r\n      // Generar opciones aleatorias\r\n      const allOptions = [codeLines[lineIndex], 'Incorrect Option 1', 'Incorrect Option 2', 'Incorrect Option 3'];\r\n      const shuffledOptions = allOptions.sort(() => Math.random() - 0.5);\r\n      setOptions(shuffledOptions);\r\n\r\n      // Modificar el código para que falte la línea correcta\r\n      codeLines[lineIndex] = '________';\r\n      setExerciseDetails((prev) => ({\r\n        ...prev,\r\n        modifiedCode: codeLines.join('\\n'),\r\n      }));\r\n    }\r\n  }, [exercise]);\r\n\r\n  const handleOptionSelect = async (option) => {\r\n    setSelectedOption(option);\r\n    if (option === correctLine) {\r\n      setGameResult('win');\r\n      await handleGameCompletion(true);\r\n    } else {\r\n      setGameResult('lose');\r\n    }\r\n  };\r\n\r\n  const handleGameCompletion = async (isWin) => {\r\n    try {\r\n      const payload = {\r\n        userId,\r\n        exerciseId,\r\n        experiencePoints: isWin ? 100 : 0,\r\n        successful: isWin,\r\n      };\r\n\r\n      await axios.put(`http://localhost:5000/api/users/progress-unified`, payload);\r\n    } catch (err) {\r\n      console.error('Error al actualizar el progreso del usuario:', err);\r\n    }\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setGameResult(null);\r\n    setSelectedOption('');\r\n  };\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"exercise-container\">\r\n      <div className=\"exercise-info\">\r\n        <h1>{exerciseDetails?.name}</h1>\r\n        <p>{exerciseDetails?.description}</p>\r\n      </div>\r\n\r\n      <div className=\"exercise-code\">\r\n        <h2>Python Code</h2>\r\n        <pre>{exerciseDetails?.modifiedCode}</pre>\r\n      </div>\r\n\r\n      <div className=\"options\">\r\n        {options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            className={`option ${selectedOption === option ? 'selected' : ''}`}\r\n            onClick={() => handleOptionSelect(option)}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {gameResult && (\r\n        <div className=\"result-modal\">\r\n          {gameResult === 'win' ? (\r\n            <p>¡Correcto! Has completado el ejercicio.</p>\r\n          ) : (\r\n            <p>¡Incorrecto! Intenta nuevamente.</p>\r\n          )}\r\n          <button onClick={restartGame}>Reintentar</button>\r\n          <button onClick={() => navigate('/game/game2')}>Volver a la lista de ejercicios</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game2Exercise;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}